{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasebatchupdatescontext\/indexes","title":"var indexes: IndexesStorage<Database.Schema, Database.Indexes>","type":"property"}],"path":"\/documentation\/vergeorm\/databasebatchupdatescontext","title":"DatabaseBatchUpdatesContext","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/entityproxy\/table(_:)","title":"func table<E>(E.Type) -> EntityModifier<Schema, E>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/entityproxy\/subscript(dynamicmember:)","title":"subscript<U>(dynamicMember _: KeyPath<Schema, EntityTableKey<U>>) -> EntityModifier<Schema, U>","type":"subscript"}],"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/entityproxy","title":"DatabaseEntityBatchUpdatesContext.EntityProxy","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/entities","title":"var entities: DatabaseEntityBatchUpdatesContext<Schema>.EntityProxy","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/abort()","title":"func abort() throws -> Never","type":"method"},{"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/table(_:)","title":"func table<E>(E.Type) -> EntityModifier<Schema, E>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext\/subscript(dynamicmember:)","title":"subscript<U>(dynamicMember _: KeyPath<Schema, EntityTableKey<U>>) -> EntityModifier<Schema, U>","type":"subscript"}],"path":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext","title":"DatabaseEntityBatchUpdatesContext","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitymodifier\/current","title":"let current: EntityTable<Schema, Entity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitymodifier\/all()","title":"func all() -> AnyCollection<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/delete(_:)-22swa","title":"func delete<S>(S)","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/delete(_:)-31oej","title":"func delete(Entity.EntityID)","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/delete(_:)-6u7ya","title":"func delete(Entity)","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/delete(_:)-73z6e","title":"func delete<S>(S)","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/deleteall()","title":"func deleteAll()","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/find(by:)","title":"func find(by: Entity.EntityID) -> Entity?","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/find(in:)","title":"func find<S>(in: S) -> [Entity]","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/insert(_:)-2xh5m","title":"func insert(Entity) -> EntityModifier<Schema, Entity>.InsertionResult","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/insert(_:)-5xb56","title":"func insert<S>(S) -> [EntityModifier<Schema, Entity>.InsertionResult]","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/updateexists(id:update:)","title":"func updateExists(id: Entity.EntityID, update: (inout Entity) throws -> Void) throws -> Entity","type":"method"},{"path":"\/documentation\/vergeorm\/entitymodifier\/updateifexists(id:update:)","title":"func updateIfExists(id: Entity.EntityID, update: (inout Entity) throws -> Void) rethrows -> Entity?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitymodifier\/insertionresult","title":"EntityModifier.InsertionResult","type":"typealias"}],"path":"\/documentation\/vergeorm\/entitymodifier","title":"EntityModifier","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasetype\/indexes-swift.associatedtype","title":"Indexes","type":"associatedtype"},{"path":"\/documentation\/vergeorm\/databasetype\/schema","title":"Schema","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasetype\/entities","title":"var entities: EntityPropertyAdapter<Self>","type":"property"},{"path":"\/documentation\/vergeorm\/databasetype\/indexes-swift.property","title":"var indexes: IndexesPropertyAdapter<Self>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/vergeorm\/databasetype\/middlewares-2z76t","title":"var middlewares: [AnyMiddleware<Self>]","type":"property"}],"title":"DatabaseType Implementations","type":"groupMarker"}],"path":"\/documentation\/vergeorm\/databasetype\/middlewares-3ebpb","title":"var middlewares: [AnyMiddleware<Self>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasetype\/beginbatchupdates()","title":"func beginBatchUpdates() -> DatabaseBatchUpdatesContext<Self>","type":"method"},{"path":"\/documentation\/vergeorm\/databasetype\/commitbatchupdates(context:)","title":"func commitBatchUpdates(context: DatabaseBatchUpdatesContext<Self>)","type":"method"},{"path":"\/documentation\/vergeorm\/databasetype\/performbatchupdates(_:)","title":"func performBatchUpdates<Result>((DatabaseBatchUpdatesContext<Self>) throws -> Result) rethrows -> Result","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasetype\/backingstorage","title":"DatabaseType.BackingStorage","type":"typealias"}],"path":"\/documentation\/vergeorm\/databasetype","title":"DatabaseType","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entityschematype\/init()","title":"init()","type":"init"}],"path":"\/documentation\/vergeorm\/entityschematype","title":"EntitySchemaType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytabletype\/entity","title":"Entity","type":"associatedtype"},{"path":"\/documentation\/vergeorm\/entitytabletype\/schema","title":"Schema","type":"associatedtype"}],"path":"\/documentation\/vergeorm\/entitytabletype","title":"EntityTableType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indextype\/schema","title":"Schema","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indextype\/init()","title":"init()","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indextype\/key","title":"IndexType.Key","type":"typealias"}],"path":"\/documentation\/vergeorm\/indextype","title":"IndexType","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indexestype\/init()","title":"init()","type":"init"}],"path":"\/documentation\/vergeorm\/indexestype","title":"IndexesType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/middlewaretype\/database","title":"Database","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/middlewaretype\/performafterupdates(context:)","title":"func performAfterUpdates(context: DatabaseBatchUpdatesContext<Self.Database>)","type":"method"}],"path":"\/documentation\/vergeorm\/middlewaretype","title":"MiddlewareType","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/anymiddleware\/==(_:_:)","title":"static func == (AnyMiddleware<Database>, AnyMiddleware<Database>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/anymiddleware\/init(_:)","title":"init<Base>(Base)","type":"init"},{"path":"\/documentation\/vergeorm\/anymiddleware\/init(performafterupdates:)","title":"init(performAfterUpdates: (DatabaseBatchUpdatesContext<Database>) -> ())","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/anymiddleware\/performafterupdates(context:)","title":"func performAfterUpdates(context: DatabaseBatchUpdatesContext<Database>)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/anymiddleware\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/anymiddleware\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/anymiddleware","title":"AnyMiddleware","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecontext\/derived(from:queue:)","title":"func derived<Entity>(from: Entity.EntityID, queue: some TargetQueueType) -> Entity.Derived","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-17pc9","title":"func derivedNonNull<Entity>(from: Set<Entity.EntityID>) -> NonNullDerivedResult<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-2p3wd","title":"func derivedNonNull<Entity>(from: Entity) -> Entity.NonNullDerived","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-2qn1r","title":"func derivedNonNull<Entity>(from: Set<Entity>) -> NonNullDerivedResult<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-3ajst","title":"func derivedNonNull<Entity, S>(from: S) -> NonNullDerivedResult<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-580sw","title":"func derivedNonNull<Entity>(from: EntityTable<Database.Schema, Entity>.InsertionResult) -> Entity.NonNullDerived","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-6h7sr","title":"func derivedNonNull<Entity>(from: Entity.EntityID) throws -> Entity.NonNullDerived","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-7q9mo","title":"func derivedNonNull<Entity, S>(from: S) -> NonNullDerivedResult<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:)-eryq","title":"func derivedNonNull<Entity, S>(from: S) -> NonNullDerivedResult<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecontext\/derivednonnull(from:dropsoutput:)","title":"func derivedNonNull<Entity>(from: Entity, dropsOutput: (Entity?, Entity?) -> Bool) -> Entity.NonNullDerived","type":"method"}],"path":"\/documentation\/vergeorm\/databasecontext","title":"DatabaseContext","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasedynamicmembers\/subscript(dynamicmember:)","title":"subscript<Database>(dynamicMember _: KeyPath<Store.State, Database>) -> DatabaseContext<Store, Database>","type":"subscript"}],"path":"\/documentation\/vergeorm\/databasedynamicmembers","title":"DatabaseDynamicMembers","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentityupdatesresult\/containsentitydeleted(_:)","title":"func containsEntityDeleted<E>(E.Type) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/databaseentityupdatesresult\/containsentityupdated(_:)","title":"func containsEntityUpdated<E>(E.Type) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/databaseentityupdatesresult\/wasdeleted(_:)","title":"func wasDeleted<E>(E.EntityID) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/databaseentityupdatesresult\/wasupdated(_:)","title":"func wasUpdated<E>(E.EntityID) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databaseentityupdatesresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/databaseentityupdatesresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/databaseentityupdatesresult","title":"DatabaseEntityUpdatesResult","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasestorage\/==(_:_:)","title":"static func == (DatabaseStorage<Schema, Indexes>, DatabaseStorage<Schema, Indexes>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasestorage\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasestorage\/entityupdatedmarker","title":"var entityUpdatedMarker: NonAtomicCounter","type":"property"},{"path":"\/documentation\/vergeorm\/databasestorage\/indexupdatedmarker","title":"var indexUpdatedMarker: NonAtomicCounter","type":"property"},{"path":"\/documentation\/vergeorm\/databasestorage\/lastupdatesresult","title":"var lastUpdatesResult: DatabaseEntityUpdatesResult<Schema>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasestorage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/databasestorage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/databasestorage","title":"DatabaseStorage","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitypropertyadapter\/table(_:)","title":"func table<E>(E.Type) -> EntityTable<DB.Schema, E>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitypropertyadapter\/subscript(dynamicmember:)","title":"subscript<E>(dynamicMember _: KeyPath<DB.Schema, EntityTableKey<E>>) -> EntityTable<DB.Schema, E>","type":"subscript"}],"path":"\/documentation\/vergeorm\/entitypropertyadapter","title":"EntityPropertyAdapter","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytable\/insertionresult\/entity","title":"let entity: Entity","type":"property"},{"path":"\/documentation\/vergeorm\/entitytable\/insertionresult\/entityid","title":"var entityID: Entity.EntityID","type":"property"}],"path":"\/documentation\/vergeorm\/entitytable\/insertionresult","title":"EntityTable.InsertionResult","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytable\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytable\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/vergeorm\/entitytable\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/vergeorm\/entitytable\/updatedmarker","title":"var updatedMarker: NonAtomicCounter","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytable\/allentities()","title":"func allEntities() -> AnyCollection<Entity>","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/allids()","title":"func allIDs() -> Set<Entity.EntityID>","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/find(by:)","title":"func find(by: Entity.EntityID) -> Entity?","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/find(in:)","title":"func find<S>(in: S) -> [Entity]","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/insert(_:)-3w775","title":"func insert(Entity) -> EntityTable<Schema, Entity>.InsertionResult","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/insert(_:)-7s7ic","title":"func insert<S>(S) -> [EntityTable<Schema, Entity>.InsertionResult]","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/remove(_:)","title":"func remove(Entity.EntityID)","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/updateexists(id:update:)","title":"func updateExists(id: Entity.EntityID, update: (inout Entity) throws -> Void) throws -> Entity","type":"method"},{"path":"\/documentation\/vergeorm\/entitytable\/updateifexists(id:update:)","title":"func updateIfExists(id: Entity.EntityID, update: (inout Entity) throws -> Void) rethrows -> Entity?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/vergeorm\/entitytable\/==(_:_:)","title":"static func == (EntityTable<Schema, Entity>, EntityTable<Schema, Entity>) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/entitytable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/entitytable","title":"EntityTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytablekey\/init(file:line:column:)","title":"init(file: StaticString, line: UInt, column: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytablekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/entitytablekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/entitytablekey","title":"EntityTableKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytablesstorage\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytablesstorage\/table(_:)","title":"func table<E>(E.Type) -> EntityTable<Schema, E>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/entitytablesstorage\/subscript(dynamicmember:)","title":"subscript<E>(dynamicMember _: KeyPath<Schema, EntityTableKey<E>>) -> EntityTable<Schema, E>","type":"subscript"}],"path":"\/documentation\/vergeorm\/entitytablesstorage","title":"EntityTablesStorage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/groupcount()","title":"func groupCount() -> Int","type":"method"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/groups()","title":"func groups() -> Set<GroupEntity.EntityID>","type":"method"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/orderedid(in:)","title":"func orderedID(in: GroupEntity.EntityID) -> OrderedIDIndex<Schema, GroupedEntity>","type":"method"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/removegroup(_:)","title":"func removeGroup(GroupEntity.EntityID)","type":"method"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/update(in:update:)","title":"func update(in: GroupEntity.EntityID, update: (inout OrderedIDIndex<Schema, GroupedEntity>) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbyentityindex\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/groupbyentityindex\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/groupbyentityindex","title":"GroupByEntityIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/groupcount()","title":"func groupCount() -> Int","type":"method"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/groups()","title":"func groups() -> Set<GroupingKey>","type":"method"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/orderedid(in:)","title":"func orderedID(in: GroupingKey) -> OrderedIDIndex<Schema, GroupedEntity>","type":"method"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/removegroup(_:)","title":"func removeGroup(GroupingKey)","type":"method"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/update(in:update:)","title":"func update(in: GroupingKey, update: (inout OrderedIDIndex<Schema, GroupedEntity>) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbykeyindex\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/groupbykeyindex\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/groupbykeyindex","title":"GroupByKeyIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/hashindex\/init()","title":"init()","type":"init"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/hashindex\/subscript(_:)","title":"subscript(HashKey) -> Entity.EntityID?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/hashindex\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/hashindex\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/hashindex","title":"HashIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indexkey\/init(file:line:column:)","title":"init(file: StaticString, line: UInt, column: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indexkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/indexkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/indexkey","title":"IndexKey","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indexespropertyadapter\/subscript(dynamicmember:)","title":"subscript<Index>(dynamicMember _: KeyPath<DB.Indexes, IndexKey<Index>>) -> Index","type":"subscript"}],"path":"\/documentation\/vergeorm\/indexespropertyadapter","title":"IndexesPropertyAdapter","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/indexesstorage\/subscript(dynamicmember:)","title":"subscript<Index>(dynamicMember _: KeyPath<Indexes, IndexKey<Index>>) -> Index","type":"subscript"}],"path":"\/documentation\/vergeorm\/indexesstorage","title":"IndexesStorage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/noschema\/init()","title":"init()","type":"init"}],"path":"\/documentation\/vergeorm\/noschema","title":"NoSchema","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-18qmc","title":"subscript(Range<Int>) -> ArraySlice<Entity.EntityID>","type":"subscript"}],"path":"\/documentation\/vergeorm\/orderedidindex\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/vergeorm\/orderedidindex\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/vergeorm\/orderedidindex\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/vergeorm\/orderedidindex\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/vergeorm\/orderedidindex\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/vergeorm\/orderedidindex\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/cachedcompactmap(using:sweepsunused:makenew:update:)","title":"func cachedCompactMap<U>(using: InstancePool<Self.Element, U>, sweepsUnused: Bool, makeNew: (Self.Element) throws -> U?, update: (Self.Element, inout U) -> Void) rethrows -> [U]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/cachedmap(using:sweepsunused:makenew:update:)","title":"func cachedMap<U>(using: InstancePool<Self.Element, U>, sweepsUnused: Bool, makeNew: (Self.Element) throws -> U, update: (Self.Element, inout U) -> Void) rethrows -> [U]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/map(_:)-6h6bp","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-c3lp","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-edl1","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/index","title":"OrderedIDIndex.Index","type":"typealias"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subsequence","title":"OrderedIDIndex.SubSequence","type":"typealias"}],"path":"\/documentation\/vergeorm\/orderedidindex\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/orderedidindex\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/partition(by:)-3e5ii","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/partition(by:)-5csh9","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/sort(using:)-1s2p4","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/sort(using:)-rfp2","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-1i9ju","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-37gy3","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-7grud","title":"subscript(Int) -> Entity.EntityID","type":"subscript"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-894tb","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/vergeorm\/orderedidindex\/subscript(_:)-esl6","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/vergeorm\/orderedidindex\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/vergeorm\/orderedidindex\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/+(_:_:)-28hdn","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/vergeorm\/orderedidindex\/+(_:_:)-35d16","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/vergeorm\/orderedidindex\/+(_:_:)-7lgga","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/vergeorm\/orderedidindex\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/vergeorm\/orderedidindex\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/append(_:)-447m4","title":"func append(Entity.EntityID)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/append(_:)-9au4i","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/append(contentsof:)","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/insert(_:at:)","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/insert(contentsof:at:)","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/remove(at:)","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removeall(keepingcapacity:)-7cuy5","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removeall(keepingcapacity:)-are8","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removeall(where:)-18bc3","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removeall(where:)-40vkh","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removesubrange(_:)-5101c","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/removesubrange(_:)-9ubva","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/replacesubrange(_:with:)-2ujq5","title":"func replaceSubrange<C>(Range<Int>, with: C)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/replacesubrange(_:with:)-6s7d1","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/replacesubrange(_:with:)-q8t","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/vergeorm\/orderedidindex\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/vergeorm\/orderedidindex\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/flatmap(_:)-54zzz","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/flatmap(_:)-82jv7","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/map(_:)-84ref","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/sorted(using:)-53art","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/sorted(using:)-5o92m","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/vergeorm\/orderedidindex\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/orderedidindex\/element","title":"OrderedIDIndex.Element","type":"typealias"}],"path":"\/documentation\/vergeorm\/orderedidindex\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/orderedidindex","title":"OrderedIDIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/setindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/setindex\/compactmap(_:)","title":"func compactMap<ElementOfResult>((SetIndex<Schema, Entity>.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/formunion(_:)","title":"func formUnion<S>(S)","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/insert(_:)","title":"func insert(SetIndex<Schema, Entity>.Element) -> (inserted: Bool, memberAfterInsert: SetIndex<Schema, Entity>.Element)","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/map(_:)","title":"func map<T>((SetIndex<Schema, Entity>.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/remove(_:)","title":"func remove(SetIndex<Schema, Entity>.Element) -> SetIndex<Schema, Entity>.Element?","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/sorted(by:)","title":"func sorted(by: (SetIndex<Schema, Entity>.Element, SetIndex<Schema, Entity>.Element) throws -> Bool) rethrows -> [SetIndex<Schema, Entity>.Element]","type":"method"},{"path":"\/documentation\/vergeorm\/setindex\/subtract(_:)","title":"func subtract(Set<SetIndex<Schema, Entity>.Element>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/setindex\/element","title":"SetIndex.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/setindex\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/setindex\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/setindex","title":"SetIndex","type":"struct"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasestate()","title":"macro DatabaseState()","type":"macro"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/groupbyindex","title":"GroupByIndex","type":"typealias"},{"path":"\/documentation\/vergeorm\/standaloneentitytable","title":"StandaloneEntityTable","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/batchupdateserror\/aborted","title":"case aborted","type":"case"},{"path":"\/documentation\/vergeorm\/batchupdateserror\/storedentitynotfound","title":"case storedEntityNotFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/batchupdateserror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/batchupdateserror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/batchupdateserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vergeorm\/batchupdateserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/batchupdateserror","title":"BatchUpdatesError","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/callasfunction(_:_:)","title":"func callAsFunction(Database, Database) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/input","title":"DatabaseComparisons.DatabaseComparison.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/equality()-1mx0q","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/equality()-ovcw","title":"static func equality<each T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/databasecomparison","title":"DatabaseComparisons.DatabaseComparison","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/callasfunction(_:_:)","title":"func callAsFunction(Database, Database) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/input","title":"DatabaseComparisons.DatabaseIndexComparison.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/equality()-4ku8r","title":"static func equality<each T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/equality()-9ae6i","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/databaseindexcomparison","title":"DatabaseComparisons.DatabaseIndexComparison","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/callasfunction(_:_:)","title":"func callAsFunction(Database, Database) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/input","title":"DatabaseComparisons.TableComparison.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/equality()-1ulvc","title":"static func equality<each T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/equality()-31ybf","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/tablecomparison","title":"DatabaseComparisons.TableComparison","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/init(entityid:)","title":"init(entityID: Entity.EntityID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/entityid","title":"let entityID: Entity.EntityID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/callasfunction(_:_:)","title":"func callAsFunction(Database, Database) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/input","title":"DatabaseComparisons.UpdateComparison.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/equality()-2aftw","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/equality()-9y5t6","title":"static func equality<each T>() -> Self","type":"method"},{"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/databasecomparisons\/updatecomparison","title":"DatabaseComparisons.UpdateComparison","type":"struct"}],"path":"\/documentation\/vergeorm\/databasecomparisons","title":"DatabaseComparisons","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/vergeormerror\/notfoundentityfromdatabase","title":"case notFoundEntityFromDatabase","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/vergeormerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergeorm\/vergeormerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/vergeormerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vergeorm\/vergeormerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/vergeorm\/vergeormerror","title":"VergeORMError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/verge\/dispatchertype\/databases","title":"var databases: DatabaseDynamicMembers<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/verge\/dispatchertype\/derivedentity(entityid:from:)","title":"func derivedEntity<Entity, Database>(entityID: Entity.EntityID, from: KeyPath<Self.State, Database>) -> Entity.Derived","type":"method"},{"path":"\/documentation\/vergeorm\/verge\/dispatchertype\/derivedentitypersistent(entity:from:)","title":"func derivedEntityPersistent<Entity, Database>(entity: Entity, from: KeyPath<Self.State, Database>) -> Entity.NonNullDerived","type":"method"}],"path":"\/documentation\/vergeorm\/verge\/dispatchertype","title":"DispatcherType","type":"extension"}],"path":"\/documentation\/vergeorm\/verge","title":"Verge","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergeorm\/vergenormalization\/entitytype\/entitytablekey","title":"EntityType.EntityTableKey","type":"typealias"}],"path":"\/documentation\/vergeorm\/vergenormalization\/entitytype","title":"EntityType","type":"extension"}],"path":"\/documentation\/vergeorm\/vergenormalization","title":"VergeNormalization","type":"extension"}],"path":"\/documentation\/vergeorm","title":"VergeORM","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}
{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the application that uses many entity objects, we sure highly recommend using such as ORM using Normalization."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"About more detail, https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape"}]},{"anchor":"Core-Concepts","level":2,"type":"heading","text":"Core Concepts"},{"type":"paragraph","inlineContent":[{"type":"text","text":"VergeORM is a library to manage Object-Relational Mapping in the value-type struct."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It provides to store with Normalization and accessing easier way. Basically, If we do Normalization without any tool, accessing would be complicated."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The datastore can be stored anywhere because itâ€™s built by struct type. It allows that to adapt to state-shape already exists."}]},{"type":"codeListing","syntax":"swift","code":["struct YourAppState {","","  \/\/ VergeORM's datastore","  struct Database: DatabaseType {","","    ...","    \/\/ We will explain this later.","  }","","  \/\/ Put Database anywhere you'd like","  var db: Database = .init()","","  ... other states","}"]},{"anchor":"Stores-data-with-normalization","level":3,"type":"heading","text":"Stores data with normalization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many applications manage a lot of entities. Single state-tree requires work similar to creating database schema. The state shape is most important, otherwise performance issue will appear when your application grows."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"â€Œ To avoid this, we should do "},{"type":"strong","inlineContent":[{"type":"text","text":"Normalize"}]},{"type":"text","text":" the State Shape. About Normalizing state shape, "},{"type":"reference","isActive":true,"identifier":"https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape"},{"type":"text","text":" explains it so good. VergeORM provides several helper methods to normalize state shape."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Supports find, insert, delete with easy plain implementations."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Supports batch update with context, anywhere it can abort and revert to current state."}]}]}]},{"anchor":"Getting-Started","level":2,"type":"heading","text":"Getting Started"},{"anchor":"Create-Database-struct","level":3,"type":"heading","text":"Create Database struct"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Database struct"}]},{"type":"text","text":" contains the tables for each Entity. As a struct object, that allows to manage history and it can be embedded on the state that application uses. â€Œ"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Database struct"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Book entity"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Author entity"}]}]}]}]}]},{"anchor":"Add-DatabaseType-protocol-to-your-database-struct","level":3,"type":"heading","text":"Add DatabaseType protocol to your database struct"},{"type":"codeListing","syntax":"swift","code":["struct Database: DatabaseType {","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"DatabaseType"},{"type":"text","text":" protocol has several constraints and provides functions with that. To satisfy those constraints, make it like following"}]},{"type":"codeListing","syntax":"swift","code":["struct Database: DatabaseType {","","  struct Schema: EntitySchemaType {","","  }","","  struct Indexes: IndexesType {","","  }","","  var _backingStorage: BackingStorage = .init()","}"]},{"anchor":"Register-EntityTable","level":3,"type":"heading","text":"Register EntityTable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As an example, suppose we have Book and Author entities."}]},{"type":"codeListing","syntax":"swift","code":["struct Book: EntityType {","","  typealias IdentifierType = String","","  var entityID: EntityID {","    .init(rawID)","  }","","  let rawID: String","}","","struct Author: EntityType {","","  typealias IdentifierType = String","","  var entityID: EntityID {","    .init(rawID)","  }","","  let rawID: String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By conforming to "},{"type":"codeVoice","code":"EntityType"},{"type":"text","text":" protocol, it can be used by Database as Entity. It needs "},{"type":"codeVoice","code":"rawID"},{"type":"text","text":" and you can set whatever type your Entity needs."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then, add these entities to Schema object."}]},{"type":"codeListing","syntax":"swift","code":["struct Database: DatabaseType {","","  struct Schema: EntitySchemaType {","    let book = Book.EntityTableKey()","    let author = Book.EntityTableKey()","  }","","  struct Indexes: IndexesType {","    \/\/ In this time, we don't touch here.","  }","","  var _backingStorage: BackingStorage = .init()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, you can use Database object like this."}]},{"type":"codeListing","syntax":"swift","code":["let db = RootState.Database()","","let bookEntityTable: EntityTable<Book, Read> = db.entities.book"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can get aEntityTable object for Book. And then you can use these methods."}]},{"type":"codeListing","syntax":"swift","code":["bookEntityTable.all()","bookEntityTable.find(by: <#T##VergeTypedIdentifier<Book>#>)","bookEntityTable.find(in: <#T##Sequence#>)"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ’¡ These syntax are realized by Swiftâ€™s dynamicMemberLookup. If you have curiosity, please check out the source-code."}]}],"type":"aside","name":"Note"},{"anchor":"Update-Database","level":2,"type":"heading","text":"Update Database"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To update Database object(Insert, Update, Delete), use "},{"type":"codeVoice","code":"performbatchUpdates"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["db.performBatchUpdates { (context) in","  \/\/ Put the updating code here","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":"swift","code":["db.performBatchUpdates { (context) in","  let book = Book(rawID: \"some\")","  context.book.insert(book)","}","","\/\/ db.entities.book.count == 1"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/vergeorm"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/VergeORM\/documentation\/VergeORM","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"It provides the function that manages performant many entity objects. Technically, using Normalization."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"VergeORM","title":"VergeORM","symbolKind":"module","role":"collection","modules":[{"name":"VergeORM"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseBatchUpdatesContext","doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseEntityBatchUpdatesContext","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityModifier"]},{"title":"Protocols","identifiers":["doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseType","doc:\/\/VergeORM\/documentation\/VergeORM\/EntitySchemaType","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTableType","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityType","doc:\/\/VergeORM\/documentation\/VergeORM\/IndexType","doc:\/\/VergeORM\/documentation\/VergeORM\/IndexesType","doc:\/\/VergeORM\/documentation\/VergeORM\/MiddlewareType"]},{"title":"Structures","identifiers":["doc:\/\/VergeORM\/documentation\/VergeORM\/AnyEntityIdentifier","doc:\/\/VergeORM\/documentation\/VergeORM\/AnyMiddleware","doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseContext","doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseDynamicMembers","doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseEntityUpdatesResult","doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseStorage","doc:\/\/VergeORM\/documentation\/VergeORM\/DerivedResult","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityIdentifier","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityPropertyAdapter","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTable","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTableIdentifier","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTableKey","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTablesStorage","doc:\/\/VergeORM\/documentation\/VergeORM\/EntityWrapper","doc:\/\/VergeORM\/documentation\/VergeORM\/GroupByEntityIndex","doc:\/\/VergeORM\/documentation\/VergeORM\/GroupByKeyIndex","doc:\/\/VergeORM\/documentation\/VergeORM\/HashIndex","doc:\/\/VergeORM\/documentation\/VergeORM\/IndexKey","doc:\/\/VergeORM\/documentation\/VergeORM\/IndexesPropertyAdapter","doc:\/\/VergeORM\/documentation\/VergeORM\/IndexesStorage","doc:\/\/VergeORM\/documentation\/VergeORM\/NoSchema","doc:\/\/VergeORM\/documentation\/VergeORM\/NonNullEntityWrapper","doc:\/\/VergeORM\/documentation\/VergeORM\/OrderedIDIndex","doc:\/\/VergeORM\/documentation\/VergeORM\/SetIndex"]},{"title":"Type Aliases","identifiers":["doc:\/\/VergeORM\/documentation\/VergeORM\/GroupByIndex","doc:\/\/VergeORM\/documentation\/VergeORM\/NonNullDerivedResult","doc:\/\/VergeORM\/documentation\/VergeORM\/StandaloneEntityTable"]},{"title":"Enumerations","identifiers":["doc:\/\/VergeORM\/documentation\/VergeORM\/BatchUpdatesError","doc:\/\/VergeORM\/documentation\/VergeORM\/PrimitiveIdentifier","doc:\/\/VergeORM\/documentation\/VergeORM\/VergeORMError"]}],"references":{"doc://VergeORM/documentation/VergeORM/PrimitiveIdentifier":{"role":"symbol","title":"PrimitiveIdentifier","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrimitiveIdentifier"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/PrimitiveIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrimitiveIdentifier"}],"url":"\/documentation\/vergeorm\/primitiveidentifier"},"doc://VergeORM/documentation/VergeORM/AnyMiddleware":{"role":"symbol","title":"AnyMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyMiddleware"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/AnyMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyMiddleware"}],"url":"\/documentation\/vergeorm\/anymiddleware"},"doc://VergeORM/documentation/VergeORM/BatchUpdatesError":{"role":"symbol","title":"BatchUpdatesError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BatchUpdatesError"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/BatchUpdatesError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BatchUpdatesError"}],"url":"\/documentation\/vergeorm\/batchupdateserror"},"doc://VergeORM/documentation/VergeORM/EntityTablesStorage":{"role":"symbol","title":"EntityTablesStorage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityTablesStorage"}],"abstract":[{"type":"text","text":"A set of tables each the type of entity."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTablesStorage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityTablesStorage"}],"url":"\/documentation\/vergeorm\/entitytablesstorage"},"doc://VergeORM/documentation/VergeORM/NonNullEntityWrapper":{"role":"symbol","title":"NonNullEntityWrapper","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonNullEntityWrapper"}],"abstract":[{"type":"text","text":"A value that wraps an entity and results of fetching."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/NonNullEntityWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonNullEntityWrapper"}],"url":"\/documentation\/vergeorm\/nonnullentitywrapper"},"doc://VergeORM/documentation/VergeORM/IndexesType":{"role":"symbol","title":"IndexesType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexesType"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/IndexesType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IndexesType"}],"url":"\/documentation\/vergeorm\/indexestype"},"doc://VergeORM/documentation/VergeORM/EntityTableType":{"role":"symbol","title":"EntityTableType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityTableType"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTableType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityTableType"}],"url":"\/documentation\/vergeorm\/entitytabletype"},"doc://VergeORM/documentation/VergeORM/DatabaseContext":{"role":"symbol","title":"DatabaseContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseContext"}],"abstract":[{"type":"text","text":"Do not retain, use as just method-chain"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseContext"}],"url":"\/documentation\/vergeorm\/databasecontext"},"doc://VergeORM/documentation/VergeORM/EntitySchemaType":{"role":"symbol","title":"EntitySchemaType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntitySchemaType"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntitySchemaType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntitySchemaType"}],"url":"\/documentation\/vergeorm\/entityschematype"},"doc://VergeORM/documentation/VergeORM/EntityIdentifier":{"role":"symbol","title":"EntityIdentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityIdentifier"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityIdentifier"}],"url":"\/documentation\/vergeorm\/entityidentifier"},"doc://VergeORM/documentation/VergeORM/DatabaseType":{"role":"symbol","title":"DatabaseType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseType"}],"abstract":[{"type":"text","text":"A protocol indicates it is a root object as a Database"},{"type":"text","text":" "},{"type":"text","text":"As a Database, it provides the tables of the entity, the index storage."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseType"}],"url":"\/documentation\/vergeorm\/databasetype"},"https://redux.js.org/recipes/structuring-reducers/normalizing-state-shape":{"title":"Redux documentation","titleInlineContent":[{"type":"text","text":"Redux documentation"}],"type":"link","identifier":"https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape","url":"https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape"},"doc://VergeORM/documentation/VergeORM/GroupByKeyIndex":{"role":"symbol","title":"GroupByKeyIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupByKeyIndex"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/GroupByKeyIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GroupByKeyIndex"}],"url":"\/documentation\/vergeorm\/groupbykeyindex"},"doc://VergeORM/documentation/VergeORM/DatabaseDynamicMembers":{"role":"symbol","title":"DatabaseDynamicMembers","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseDynamicMembers"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseDynamicMembers","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseDynamicMembers"}],"url":"\/documentation\/vergeorm\/databasedynamicmembers"},"doc://VergeORM/documentation/VergeORM/VergeORMError":{"role":"symbol","title":"VergeORMError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VergeORMError"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/VergeORMError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VergeORMError"}],"url":"\/documentation\/vergeorm\/vergeormerror"},"doc://VergeORM/documentation/VergeORM/DerivedResult":{"role":"symbol","title":"DerivedResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivedResult"}],"abstract":[{"type":"text","text":"A result instance that contains created Derived object"},{"type":"text","text":" "},{"type":"text","text":"While creating non-null derived from entity id, some entity may be not founded."},{"type":"text","text":" "},{"type":"text","text":"Created derived object are stored in hashed storage to the consumer can check if the entity was not found by the id."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DerivedResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DerivedResult"}],"url":"\/documentation\/vergeorm\/derivedresult"},"doc://VergeORM/documentation/VergeORM/EntityWrapper":{"role":"symbol","title":"EntityWrapper","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityWrapper"}],"abstract":[{"type":"text","text":"A value that wraps an entity and results of fetching."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityWrapper"}],"url":"\/documentation\/vergeorm\/entitywrapper"},"doc://VergeORM/documentation/VergeORM/EntityTable":{"role":"symbol","title":"EntityTable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityTable"}],"abstract":[{"type":"text","text":"A collection of entity."},{"type":"text","text":" "},{"type":"text","text":"It provides the functions for querying and mutating."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityTable"}],"url":"\/documentation\/vergeorm\/entitytable"},"doc://VergeORM/documentation/VergeORM/GroupByIndex":{"deprecated":true,"role":"symbol","title":"GroupByIndex","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupByIndex"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/GroupByIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GroupByIndex"}],"url":"\/documentation\/vergeorm\/groupbyindex"},"doc://VergeORM/documentation/VergeORM/MiddlewareType":{"role":"symbol","title":"MiddlewareType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareType"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/MiddlewareType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareType"}],"url":"\/documentation\/vergeorm\/middlewaretype"},"doc://VergeORM/documentation/VergeORM/NoSchema":{"role":"symbol","title":"NoSchema","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NoSchema"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/NoSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NoSchema"}],"url":"\/documentation\/vergeorm\/noschema"},"doc://VergeORM/documentation/VergeORM/IndexesStorage":{"role":"symbol","title":"IndexesStorage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexesStorage"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/IndexesStorage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IndexesStorage"}],"url":"\/documentation\/vergeorm\/indexesstorage"},"doc://VergeORM/documentation/VergeORM/EntityType":{"role":"symbol","title":"EntityType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"A protocol describes object is an Entity."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"url":"\/documentation\/vergeorm\/entitytype"},"doc://VergeORM/documentation/VergeORM/StandaloneEntityTable":{"role":"symbol","title":"StandaloneEntityTable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandaloneEntityTable"}],"abstract":[{"type":"text","text":"A structure that store entities with normalizing."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/StandaloneEntityTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandaloneEntityTable"}],"url":"\/documentation\/vergeorm\/standaloneentitytable"},"doc://VergeORM/documentation/VergeORM/IndexesPropertyAdapter":{"role":"symbol","title":"IndexesPropertyAdapter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexesPropertyAdapter"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/IndexesPropertyAdapter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IndexesPropertyAdapter"}],"url":"\/documentation\/vergeorm\/indexespropertyadapter"},"doc://VergeORM/documentation/VergeORM/DatabaseStorage":{"role":"symbol","title":"DatabaseStorage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseStorage"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseStorage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseStorage"}],"url":"\/documentation\/vergeorm\/databasestorage"},"doc://VergeORM/documentation/VergeORM/IndexType":{"role":"symbol","title":"IndexType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexType"}],"abstract":[{"type":"text","text":"A protocol IndexContainer must be implemented"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/IndexType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IndexType"}],"url":"\/documentation\/vergeorm\/indextype"},"doc://VergeORM/documentation/VergeORM/GroupByEntityIndex":{"role":"symbol","title":"GroupByEntityIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupByEntityIndex"}],"abstract":[{"type":"text","text":"A Indexing store"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/GroupByEntityIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GroupByEntityIndex"}],"url":"\/documentation\/vergeorm\/groupbyentityindex"},"doc://VergeORM/documentation/VergeORM/NonNullDerivedResult":{"role":"symbol","title":"NonNullDerivedResult","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonNullDerivedResult"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/NonNullDerivedResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonNullDerivedResult"}],"url":"\/documentation\/vergeorm\/nonnullderivedresult"},"doc://VergeORM/documentation/VergeORM/OrderedIDIndex":{"role":"symbol","title":"OrderedIDIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OrderedIDIndex"}],"abstract":[{"type":"text","text":"Ordered Collection based index storage"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/OrderedIDIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OrderedIDIndex"}],"url":"\/documentation\/vergeorm\/orderedidindex"},"doc://VergeORM/documentation/VergeORM":{"role":"collection","title":"VergeORM","abstract":[{"type":"text","text":"It provides the function that manages performant many entity objects. Technically, using Normalization."}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM","kind":"symbol","type":"topic","url":"\/documentation\/vergeorm"},"doc://VergeORM/documentation/VergeORM/IndexKey":{"role":"symbol","title":"IndexKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexKey"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/IndexKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IndexKey"}],"url":"\/documentation\/vergeorm\/indexkey"},"doc://VergeORM/documentation/VergeORM/DatabaseEntityBatchUpdatesContext":{"role":"symbol","title":"DatabaseEntityBatchUpdatesContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseEntityBatchUpdatesContext"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseEntityBatchUpdatesContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseEntityBatchUpdatesContext"}],"url":"\/documentation\/vergeorm\/databaseentitybatchupdatescontext"},"doc://VergeORM/documentation/VergeORM/HashIndex":{"role":"symbol","title":"HashIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashIndex"}],"abstract":[{"type":"text","text":"Dictionary based index storage"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/HashIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashIndex"}],"url":"\/documentation\/vergeorm\/hashindex"},"doc://VergeORM/documentation/VergeORM/DatabaseEntityUpdatesResult":{"role":"symbol","title":"DatabaseEntityUpdatesResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseEntityUpdatesResult"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseEntityUpdatesResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseEntityUpdatesResult"}],"url":"\/documentation\/vergeorm\/databaseentityupdatesresult"},"doc://VergeORM/documentation/VergeORM/AnyEntityIdentifier":{"role":"symbol","title":"AnyEntityIdentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyEntityIdentifier"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/AnyEntityIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyEntityIdentifier"}],"url":"\/documentation\/vergeorm\/anyentityidentifier"},"doc://VergeORM/documentation/VergeORM/EntityTableKey":{"role":"symbol","title":"EntityTableKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityTableKey"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTableKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityTableKey"}],"url":"\/documentation\/vergeorm\/entitytablekey"},"doc://VergeORM/documentation/VergeORM/EntityTableIdentifier":{"role":"symbol","title":"EntityTableIdentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityTableIdentifier"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityTableIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityTableIdentifier"}],"url":"\/documentation\/vergeorm\/entitytableidentifier"},"doc://VergeORM/documentation/VergeORM/EntityPropertyAdapter":{"role":"symbol","title":"EntityPropertyAdapter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityPropertyAdapter"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityPropertyAdapter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityPropertyAdapter"}],"url":"\/documentation\/vergeorm\/entitypropertyadapter"},"doc://VergeORM/documentation/VergeORM/EntityModifier":{"role":"symbol","title":"EntityModifier","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityModifier"}],"abstract":[{"type":"text","text":"For performBatchUpdates"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/EntityModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityModifier"}],"url":"\/documentation\/vergeorm\/entitymodifier"},"doc://VergeORM/documentation/VergeORM/DatabaseBatchUpdatesContext":{"role":"symbol","title":"DatabaseBatchUpdatesContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseBatchUpdatesContext"}],"abstract":[],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/DatabaseBatchUpdatesContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseBatchUpdatesContext"}],"url":"\/documentation\/vergeorm\/databasebatchupdatescontext"},"doc://VergeORM/documentation/VergeORM/SetIndex":{"role":"symbol","title":"SetIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetIndex"}],"abstract":[{"type":"text","text":"Ordered Collection based index storage"}],"identifier":"doc:\/\/VergeORM\/documentation\/VergeORM\/SetIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SetIndex"}],"url":"\/documentation\/vergeorm\/setindex"}}}
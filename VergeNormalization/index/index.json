{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entitytype\/entityidrawtype","title":"EntityIDRawType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entitytype\/entityid-swift.property","title":"var entityID: Self.EntityID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entitytype\/entityid-swift.typealias","title":"EntityType.EntityID","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/vergenormalization\/entitytype\/entityname-5b2rb","title":"static var entityName: EntityTableIdentifier","type":"property"}],"title":"EntityType Implementations","type":"groupMarker"}],"path":"\/documentation\/vergenormalization\/entitytype\/entityname-7smch","title":"static var entityName: EntityTableIdentifier","type":"property"}],"path":"\/documentation\/vergenormalization\/entitytype","title":"EntityType","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/beginbatchupdates()","title":"func beginBatchUpdates() -> ModifyingTransaction<Self>","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/commitbatchupdates(transaction:)","title":"func commitBatchUpdates(transaction: consuming ModifyingTransaction<Self>)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/finalizetransaction(transaction:)-4w86z","title":"func finalizeTransaction(transaction: inout ModifyingTransaction<Self>)","type":"method"}],"title":"NormalizedStorageType Implementations","type":"groupMarker"}],"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/finalizetransaction(transaction:)-614xo","title":"func finalizeTransaction(transaction: inout ModifyingTransaction<Self>)","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/performbatchupdates(_:)","title":"func performBatchUpdates<Result>((inout ModifyingTransaction<Self>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/table(_:)","title":"func table<Selector>(consuming Selector) -> Selector.Table","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragetype\/compare(lhs:rhs:)","title":"static func compare(lhs: Self, rhs: Self) -> Bool","type":"method"}],"path":"\/documentation\/vergenormalization\/normalizedstoragetype","title":"NormalizedStorageType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/storageselector\/source","title":"Source","type":"associatedtype"},{"path":"\/documentation\/vergenormalization\/storageselector\/storage","title":"Storage","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/storageselector\/appending(_:)","title":"func appending<_TableSelector>(consuming _TableSelector) -> AbsoluteTableSelector<Self, _TableSelector>","type":"method"},{"path":"\/documentation\/vergenormalization\/storageselector\/select(source:)","title":"func select(source: consuming Self.Source) -> Self.Storage","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/storageselector\/keypath(_:)","title":"static func keyPath<Source, Storage>(KeyPath<Source, Storage>) -> Self","type":"method"}],"path":"\/documentation\/vergenormalization\/storageselector","title":"StorageSelector","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tableselector\/storage","title":"Storage","type":"associatedtype"},{"path":"\/documentation\/vergenormalization\/tableselector\/table","title":"Table","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tableselector\/select(storage:)","title":"func select(storage: consuming Self.Storage) -> Self.Table","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tableselector\/keypath(_:)","title":"static func keyPath<Storage, Table>(KeyPath<Storage, Table>) -> Self","type":"method"}],"path":"\/documentation\/vergenormalization\/tableselector","title":"TableSelector","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tabletype\/entity","title":"Entity","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tabletype\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/vergenormalization\/tabletype\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/vergenormalization\/tabletype\/updatedmarker","title":"var updatedMarker: NonAtomicCounter","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tabletype\/find(by:)","title":"func find(by: consuming Self.Entity.EntityID) -> Self.Entity?","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/find(in:)","title":"func find(in: consuming some Sequence<EntityIdentifier<Self.Entity>>) -> [Self.Entity]","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/insert(_:)-2kpyy","title":"func insert(consuming some Sequence<Self.Entity>) -> [Self.InsertionResult]","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/insert(_:)-5vo8e","title":"func insert(consuming Self.Entity) -> Self.InsertionResult","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/remove(_:)","title":"func remove(Self.Entity.EntityID)","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/updateexists(id:update:)","title":"func updateExists(id: consuming Self.Entity.EntityID, update: (inout Self.Entity) throws -> Void) throws -> Self.Entity","type":"method"},{"path":"\/documentation\/vergenormalization\/tabletype\/updateifexists(id:update:)","title":"func updateIfExists(id: consuming Self.Entity.EntityID, update: (inout Self.Entity) throws -> Void) rethrows -> Self.Entity?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tabletype\/insertionresult","title":"TableType.InsertionResult","type":"typealias"}],"path":"\/documentation\/vergenormalization\/tabletype","title":"TableType","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/init(storage:table:)","title":"init(storage: consuming _StorageSelector, table: consuming _TableSelector)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/storageselector","title":"let storageSelector: _StorageSelector","type":"property"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/tableselector","title":"let tableSelector: _TableSelector","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/storage(source:)","title":"func storage(source: consuming _StorageSelector.Source) -> _StorageSelector.Storage","type":"method"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/table(source:)","title":"func table(source: consuming _StorageSelector.Source) -> _TableSelector.Table","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/entity","title":"AbsoluteTableSelector.Entity","type":"typealias"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/storage","title":"AbsoluteTableSelector.Storage","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/absolutetableselector\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/absolutetableselector\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/absolutetableselector","title":"AbsoluteTableSelector","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/anyentityidentifier\/init(_:)","title":"init(PrimitiveIdentifier)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/anyentityidentifier\/value","title":"let value: PrimitiveIdentifier","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/anyentityidentifier\/stringliteraltype","title":"AnyEntityIdentifier.StringLiteralType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/anyentityidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/anyentityidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/anyentityidentifier","title":"AnyEntityIdentifier","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/==(_:_:)","title":"static func == (EntityIdentifier<Entity>, EntityIdentifier<Entity>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/init(_:)","title":"init(Entity.EntityIDRawType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/any","title":"let any: AnyEntityIdentifier","type":"property"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/raw","title":"let raw: Entity.EntityIDRawType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entityidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/entityidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/entityidentifier","title":"EntityIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entitytableidentifier\/init(_:)-8uqjm","title":"init<T>(T.Type)","type":"init"},{"path":"\/documentation\/vergenormalization\/entitytableidentifier\/init(_:)-929dt","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entitytableidentifier\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/entitytableidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/entitytableidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/entitytableidentifier","title":"EntityTableIdentifier","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/insertionresult\/entity","title":"let entity: Entity","type":"property"},{"path":"\/documentation\/vergenormalization\/insertionresult\/entityid","title":"var entityID: Entity.EntityID","type":"property"}],"path":"\/documentation\/vergenormalization\/insertionresult","title":"InsertionResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathstorageselector\/init(keypath:)","title":"init(keyPath: KeyPath<Source, Storage>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathstorageselector\/keypath","title":"let keyPath: KeyPath<Source, Storage>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathstorageselector\/select(source:)","title":"func select(source: consuming Source) -> Storage","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathstorageselector\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/keypathstorageselector\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathstorageselector\/appending(_:)","title":"func appending<_TableSelector>(consuming _TableSelector) -> AbsoluteTableSelector<Self, _TableSelector>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathstorageselector\/keypath(_:)","title":"static func keyPath<Source, Storage>(KeyPath<Source, Storage>) -> Self","type":"method"}],"path":"\/documentation\/vergenormalization\/keypathstorageselector\/storageselector-implementations","title":"StorageSelector Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/keypathstorageselector","title":"KeyPathStorageSelector","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathtableselector\/init(keypath:)","title":"init(keyPath: KeyPath<Storage, Table>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathtableselector\/keypath","title":"let keyPath: KeyPath<Storage, Table>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathtableselector\/select(storage:)","title":"func select(storage: consuming Storage) -> Table","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathtableselector\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/keypathtableselector\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/keypathtableselector\/keypath(_:)","title":"static func keyPath<Storage, Table>(KeyPath<Storage, Table>) -> Self","type":"method"}],"path":"\/documentation\/vergenormalization\/keypathtableselector\/tableselector-implementations","title":"TableSelector Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/keypathtableselector","title":"KeyPathTableSelector","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/modifyingtransaction\/current","title":"let current: NormalizedStorage","type":"property"},{"path":"\/documentation\/vergenormalization\/modifyingtransaction\/modifying","title":"var modifying: NormalizedStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/modifyingtransaction\/abort()","title":"func abort() throws -> Never","type":"method"}],"path":"\/documentation\/vergenormalization\/modifyingtransaction","title":"ModifyingTransaction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/nonatomiccounter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/nonatomiccounter\/value","title":"var value: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/nonatomiccounter\/increment()","title":"func increment()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/nonatomiccounter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/nonatomiccounter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/nonatomiccounter","title":"NonAtomicCounter","type":"struct"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/index()","title":"macro Index()","type":"macro"},{"path":"\/documentation\/vergenormalization\/normalizedstorage()","title":"macro NormalizedStorage()","type":"macro"},{"path":"\/documentation\/vergenormalization\/table()","title":"macro Table()","type":"macro"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/indexes\/hash","title":"Indexes.Hash","type":"typealias"},{"path":"\/documentation\/vergenormalization\/indexes\/ordered","title":"Indexes.Ordered","type":"typealias"},{"path":"\/documentation\/vergenormalization\/indexes\/set","title":"Indexes.Set","type":"typealias"}],"path":"\/documentation\/vergenormalization\/indexes","title":"Indexes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/modifyingtransactionerror\/aborted","title":"case aborted","type":"case"},{"path":"\/documentation\/vergenormalization\/modifyingtransactionerror\/storedentitynotfound","title":"case storedEntityNotFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/modifyingtransactionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/modifyingtransactionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/modifyingtransactionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vergenormalization\/modifyingtransactionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/modifyingtransactionerror","title":"ModifyingTransactionError","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/callasfunction(_:_:)","title":"func callAsFunction(NormalizedStorageComparisons<Storage>.StorageComparison.Input, NormalizedStorageComparisons<Storage>.StorageComparison.Input) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/input","title":"NormalizedStorageComparisons.StorageComparison.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/equality()-5fkm5","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/equality()-6al0s","title":"static func equality<each T>() -> Self","type":"method"}],"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/storagecomparison","title":"NormalizedStorageComparisons.StorageComparison","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/callasfunction(_:_:)","title":"func callAsFunction(NormalizedStorageComparisons<Storage>.TableComparison<Table>.Input, NormalizedStorageComparisons<Storage>.TableComparison<Table>.Input) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/input","title":"NormalizedStorageComparisons.TableComparison.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/equality()-20s7f","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/equality()-2syk2","title":"static func equality<each T>() -> Self","type":"method"}],"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons\/tablecomparison","title":"NormalizedStorageComparisons.TableComparison","type":"struct"}],"path":"\/documentation\/vergenormalization\/normalizedstoragecomparisons","title":"NormalizedStorageComparisons","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/primitiveidentifier\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/vergenormalization\/primitiveidentifier\/int64(_:)","title":"case int64(Int64)","type":"case"},{"path":"\/documentation\/vergenormalization\/primitiveidentifier\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/vergenormalization\/primitiveidentifier\/uint64(_:)","title":"case uint64(UInt64)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/primitiveidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/primitiveidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/primitiveidentifier","title":"PrimitiveIdentifier","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/init(entities:)","title":"init(entities: TreeDictionary<Entity.EntityID, Entity>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/updatedmarker","title":"var updatedMarker: NonAtomicCounter","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/allentities()","title":"func allEntities() -> some Collection<Entity>\n","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/allids()","title":"func allIDs() -> TreeDictionary<Entity.EntityID, Entity>.Keys","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/find(by:)","title":"func find(by: consuming Entity.EntityID) -> Entity?","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/find(in:)","title":"func find(in: consuming some Sequence<EntityIdentifier<Entity>>) -> [Entity]","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/insert(_:)-874lv","title":"func insert(consuming some Sequence<Entity>) -> [Tables.Hash<Entity>.InsertionResult]","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/insert(_:)-zr8b","title":"func insert(Entity) -> Tables.Hash<Entity>.InsertionResult","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/remove(_:)","title":"func remove(Entity.EntityID)","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/updateexists(id:update:)","title":"func updateExists(id: consuming Entity.EntityID, update: (inout Entity) throws -> Void) throws -> Entity","type":"method"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/updateifexists(id:update:)","title":"func updateIfExists(id: consuming Entity.EntityID, update: (inout Entity) throws -> Void) rethrows -> Entity?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/entity","title":"Tables.Hash.Entity","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vergenormalization\/tables\/hash\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vergenormalization\/tables\/hash\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/vergenormalization\/tables\/hash","title":"Tables.Hash","type":"struct"}],"path":"\/documentation\/vergenormalization\/tables","title":"Tables","type":"enum"}],"path":"\/documentation\/vergenormalization","title":"VergeNormalization","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}
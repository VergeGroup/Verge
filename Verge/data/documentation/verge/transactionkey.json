{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TransactionKey"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"codeListing","syntax":null,"code":["enum MyKey: TransactionKey {","  static var defaultValue: String? { nil }","}"]},{"type":"codeListing","syntax":null,"code":["extension Transaction {","  var myValue: String? {","    get {","      self[MyKey.self]","    }","    set {","      self[MyKey.self] = newValue","    }","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/verge\/transactionkey"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Verge\/documentation\/Verge\/TransactionKey","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A type based key for transaction."},{"type":"text","text":" "},{"type":"text","text":"It’s like SwiftUI’s EnvironmentValue."},{"type":"text","text":" "},{"type":"text","text":"Making a new type as key, gat and set values over the key."},{"type":"text","text":" "},{"type":"text","text":"It’s much safer than using string directly as avoiding conflict by using same value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TransactionKey"}],"title":"TransactionKey","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Verge14TransactionKeyP","modules":[{"name":"Verge"}],"navigatorTitle":[{"kind":"identifier","text":"TransactionKey"}]},"hierarchy":{"paths":[["doc:\/\/Verge\/documentation\/Verge"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Verge\/documentation\/Verge\/TransactionKey\/Value"]},{"title":"Type Properties","identifiers":["doc:\/\/Verge\/documentation\/Verge\/TransactionKey\/defaultValue"]}],"references":{"doc://Verge/documentation/Verge/TransactionKey/defaultValue":{"role":"symbol","title":"defaultValue","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge\/TransactionKey\/defaultValue","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/verge\/transactionkey\/defaultvalue"},"doc://Verge/documentation/Verge/TransactionKey":{"role":"symbol","title":"TransactionKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TransactionKey"}],"abstract":[{"type":"text","text":"A type based key for transaction."},{"type":"text","text":" "},{"type":"text","text":"It’s like SwiftUI’s EnvironmentValue."},{"type":"text","text":" "},{"type":"text","text":"Making a new type as key, gat and set values over the key."},{"type":"text","text":" "},{"type":"text","text":"It’s much safer than using string directly as avoiding conflict by using same value."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/TransactionKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TransactionKey"}],"url":"\/documentation\/verge\/transactionkey"},"doc://Verge/documentation/Verge/TransactionKey/Value":{"role":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge\/TransactionKey\/Value","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/verge\/transactionkey\/value"},"doc://Verge/documentation/Verge":{"role":"collection","title":"Verge","abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge","kind":"symbol","type":"topic","url":"\/documentation\/verge"}}}
{"interfaceLanguages":{"swift":[{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/verge\/motivation","title":"Motivation","type":"article"},{"path":"\/documentation\/verge\/basic-usage","title":"Basic Usage","type":"article"},{"path":"\/documentation\/verge\/advanced-usage","title":"Advanced Usage","type":"article"},{"title":"Extras","type":"groupMarker"},{"path":"\/documentation\/verge\/tiny","title":"Yet another super tiny store pattern with Verge\/Tiny","type":"article"},{"title":"Migrations","type":"groupMarker"},{"path":"\/documentation\/verge\/migration-guide-v9","title":"Changes in v9","type":"article"},{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/init(name:initialstate:storeoperation:logger:_:_:)","title":"convenience init(name: String?, initialState: State, storeOperation: StoreOperation, logger: StoreLogger?, StaticString, UInt)","type":"init"},{"path":"\/documentation\/verge\/store\/init(name:initialstate:storeoperation:logger:sanitizer:_:_:)-16s4g","title":"init(name: String?, initialState: State, storeOperation: StoreOperation, logger: StoreLogger?, sanitizer: RuntimeSanitizer?, StaticString, UInt)","type":"init"},{"path":"\/documentation\/verge\/store\/init(name:initialstate:storeoperation:logger:sanitizer:_:_:)-4n4b9","title":"init(name: String?, initialState: State, storeOperation: StoreOperation, logger: StoreLogger?, sanitizer: RuntimeSanitizer?, StaticString, UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/changes","title":"var changes: Changes<State>","type":"property"},{"path":"\/documentation\/verge\/store\/keepsaliveforsubscribers","title":"var keepsAliveForSubscribers: Bool","type":"property"},{"path":"\/documentation\/verge\/store\/logger","title":"let logger: StoreLogger?","type":"property"},{"path":"\/documentation\/verge\/store\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/verge\/store\/objectdidchange","title":"var objectDidChange: AnyPublisher<Changes<State>, Never>","type":"property"},{"path":"\/documentation\/verge\/store\/objectwillchange","title":"let objectWillChange: ObservableObjectPublisher","type":"property"},{"path":"\/documentation\/verge\/store\/sanitizer","title":"let sanitizer: RuntimeSanitizer","type":"property"},{"path":"\/documentation\/verge\/store\/scope-swift.property","title":"var scope: WritableKeyPath<State, State>","type":"property"},{"path":"\/documentation\/verge\/store\/taskmanager","title":"let taskManager: TaskManagerActor","type":"property"},{"path":"\/documentation\/verge\/store\/valuepublisher","title":"var valuePublisher: some Publisher<Changes<State>, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/activitypublisher()","title":"func activityPublisher() -> some Publisher<Activity, Never>\n","type":"method"},{"path":"\/documentation\/verge\/store\/add(middleware:)","title":"func add(middleware: some StoreMiddlewareType<State>)","type":"method"},{"path":"\/documentation\/verge\/store\/backgroundcommit(_:_:_:_:mutation:)","title":"func backgroundCommit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<State>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/store\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/verge\/store\/statedidupdate(newstate:)","title":"func stateDidUpdate(newState: Changes<State>)","type":"method"},{"path":"\/documentation\/verge\/store\/statepublisher()","title":"func statePublisher() -> some Publisher<Changes<State>, Never>\n","type":"method"},{"path":"\/documentation\/verge\/store\/statestream()","title":"func stateStream() -> AsyncStream<Changes<State>>","type":"method"},{"path":"\/documentation\/verge\/store\/task(key:mode:priority:_:)","title":"func task<Return>(key: TaskKey, mode: TaskManagerActor.Mode, priority: TaskPriority, () async throws -> Return) -> Task<Return, Error>","type":"method"},{"path":"\/documentation\/verge\/store\/taskdetached(key:mode:priority:_:)","title":"func taskDetached<Return>(key: TaskKey, mode: TaskManagerActor.Mode, priority: TaskPriority, () async throws -> Return) -> Task<Return, Error>","type":"method"},{"path":"\/documentation\/verge\/store\/unlock()","title":"func unlock()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/value","title":"Store.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/verge\/store\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"path":"\/documentation\/verge\/store\/store","title":"var store: Store<State, Activity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/assign(queue:to:)","title":"func assign(queue: MainActorTargetQueue, to: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:)-24obj","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:)-2ccnl","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:)-5foz2","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Value>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:)-983ef","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Changes<Value?>>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:)-bfto","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Value?>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:)-twja","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>) -> Self.Assignee<Value>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:dropsoutput:)-1h42g","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>, dropsOutput: (Changes<Value?>) -> Bool) -> Self.Assignee<Changes<Value?>>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:dropsoutput:)-4jmif","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>, dropsOutput: (Changes<Value>) -> Bool) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/store\/assignee(_:dropsoutput:)-5r578","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>, dropsOutput: (Changes<Value?>) -> Bool) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/store\/bindingderived(_:_:_:_:get:set:queue:)","title":"func bindingDerived<Pipeline>(String, StaticString, StaticString, UInt, get: Pipeline, set: (inout InoutRef<Self.State>, Pipeline.Output) -> Void, queue: some TargetQueueType) -> BindingDerived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/store\/bindingderived(_:_:_:_:select:queue:)","title":"func bindingDerived<Select>(String, StaticString, StaticString, UInt, select: WritableKeyPath<Self.State, Select>, queue: some TargetQueueType) -> BindingDerived<Select>","type":"method"},{"path":"\/documentation\/verge\/store\/commit(_:_:_:_:mutation:)-1497k","title":"func commit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/store\/commit(_:_:_:_:mutation:)-8ot9e","title":"func commit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/store\/derived(_:queue:)-47qm4","title":"func derived<Pipeline>(Pipeline, queue: MainActorTargetQueue) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/store\/derived(_:queue:)-7k9km","title":"func derived<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/store\/detached(by:)","title":"func detached<NewScope>(by: WritableKeyPath<Self.Scope, NewScope>) -> DetachedDispatcher<Self.WrappedStore.State, Self.WrappedStore.Activity, NewScope>","type":"method"},{"path":"\/documentation\/verge\/store\/detached(from:)","title":"func detached<NewScope>(from: WritableKeyPath<Self.WrappedStore.State, NewScope>) -> DetachedDispatcher<Self.WrappedStore.State, Self.WrappedStore.Activity, NewScope>","type":"method"},{"path":"\/documentation\/verge\/store\/send(_:_:_:_:)","title":"func send(Self.WrappedStore.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/store\/send(_:_:_:_:_:)","title":"func send(String, Self.WrappedStore.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/store\/sinkactivity(queue:receive:)","title":"func sinkActivity(queue: MainActorTargetQueue, receive: (Self.Activity) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/store\/sinkstate(dropsfirst:queue:receive:)","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/store\/sinkstate(scan:dropsfirst:queue:receive:)-6snxs","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.State>, Accumulate>, dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.State>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/store\/sinkstate(scan:dropsfirst:queue:receive:)-773vv","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.State>, Accumulate>, dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.State>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/store\/sinkstate(scan:dropsfirst:queue:receive:)-9nurx","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.Scope>, Accumulate>, dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/store\/sinkstate(scan:dropsfirst:queue:receive:)-dk8z","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.Scope>, Accumulate>, dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.Scope>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/assignee","title":"Store.Assignee","type":"typealias"},{"path":"\/documentation\/verge\/store\/scope-swift.typealias","title":"Store.Scope","type":"typealias"}],"path":"\/documentation\/verge\/store\/dispatchertype-implementations","title":"DispatcherType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/primitivestate","title":"var primitiveState: State","type":"property"},{"path":"\/documentation\/verge\/store\/state","title":"var state: Changes<State>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/store\/asstore()","title":"func asStore() -> Store<State, Activity>","type":"method"},{"path":"\/documentation\/verge\/store\/binding()","title":"func binding() -> Binding<Self.State>","type":"method"},{"path":"\/documentation\/verge\/store\/binding(_:with:)","title":"func binding<T>(WritableKeyPath<Self.State, T>, with: ((T) -> Void)?) -> Binding<T>","type":"method"}],"path":"\/documentation\/verge\/store\/storetype-implementations","title":"StoreType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/store","title":"Store","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/==(_:_:)","title":"static func == (Changes<Value>, Changes<Value>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/init(old:new:)","title":"convenience init(old: consuming Value?, new: consuming Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/current","title":"var current: Value","type":"property"},{"path":"\/documentation\/verge\/changes\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/verge\/changes\/modification","title":"let modification: InoutRef<Value>.Modification?","type":"property"},{"path":"\/documentation\/verge\/changes\/old","title":"var old: Value?","type":"property"},{"path":"\/documentation\/verge\/changes\/previous","title":"let previous: Changes<Value>?","type":"property"},{"path":"\/documentation\/verge\/changes\/previousprimitive","title":"var previousPrimitive: Value?","type":"property"},{"path":"\/documentation\/verge\/changes\/primitive","title":"var primitive: Value","type":"property"},{"path":"\/documentation\/verge\/changes\/root","title":"var root: Value","type":"property"},{"path":"\/documentation\/verge\/changes\/traces","title":"let traces: [MutationTrace]","type":"property"},{"path":"\/documentation\/verge\/changes\/version","title":"var version: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/aschanges()","title":"func asChanges() -> Changes<Value>","type":"method"},{"path":"\/documentation\/verge\/changes\/droppedprevious()","title":"func droppedPrevious() -> Changes<Value>","type":"method"},{"path":"\/documentation\/verge\/changes\/haschanges(_:)-1i0s3","title":"func hasChanges<Composed>((Value) -> Composed) -> Bool","type":"method"},{"path":"\/documentation\/verge\/changes\/haschanges(_:)-89wx1","title":"func hasChanges<T>(Changes<Value>.ChangesKeyPath<T>) -> Bool","type":"method"},{"path":"\/documentation\/verge\/changes\/haschanges(_:_:)-42aqb","title":"func hasChanges<Composed>((Value) -> Composed, some Comparison) -> Bool","type":"method"},{"path":"\/documentation\/verge\/changes\/haschanges(_:_:)-610f","title":"func hasChanges<T>(Changes<Value>.ChangesKeyPath<T>, some Comparison) -> Bool","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged()","title":"func ifChanged() -> IfChangedBox<Value>","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:)-11rt","title":"func ifChanged<T>(KeyPath<Value, T>) -> IfChangedBox<T>","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:)-5i43y","title":"func ifChanged<Composed>((Value) -> Composed) -> IfChangedBox<Composed>","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:)-7pppa","title":"func ifChanged((Value) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:)-9i69v","title":"func ifChanged<each T>(repeat KeyPath<Value, each T>) -> IfChangedBox<(repeat each T)>","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:)-usnd","title":"func ifChanged<each Element>((borrowing Value) -> (repeat each Element)) -> IfChangedBox<(repeat each Element)>","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:)-62z6v","title":"func ifChanged<T, Result>(Changes<Value>.ChangesKeyPath<T>, (T) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:)-8uqvo","title":"func ifChanged<Composed, Result>((Value) -> Composed, (Composed) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:_:)-1ylpj","title":"func ifChanged<T, Result>(Changes<Value>.ChangesKeyPath<T>, some Comparison, (T) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:_:)-8q9tr","title":"func ifChanged<T0, T1, Result>(Changes<Value>.ChangesKeyPath<T0>, Changes<Value>.ChangesKeyPath<T1>, ((T0, T1)) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:_:)-9gwr8","title":"func ifChanged<Composed, Result>((Value) -> Composed, some Comparison, (Composed) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:_:_:)","title":"func ifChanged<T0, T1, T2, Result>(Changes<Value>.ChangesKeyPath<T0>, Changes<Value>.ChangesKeyPath<T1>, Changes<Value>.ChangesKeyPath<T2>, ((T0, T1, T2)) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:_:_:_:)","title":"func ifChanged<T0, T1, T2, T3, Result>(Changes<Value>.ChangesKeyPath<T0>, Changes<Value>.ChangesKeyPath<T1>, Changes<Value>.ChangesKeyPath<T2>, Changes<Value>.ChangesKeyPath<T3>, ((T0, T1, T2, T3)) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/ifchanged(_:_:_:_:_:_:)","title":"func ifChanged<T0, T1, T2, T3, T4, Result>(Changes<Value>.ChangesKeyPath<T0>, Changes<Value>.ChangesKeyPath<T1>, Changes<Value>.ChangesKeyPath<T2>, Changes<Value>.ChangesKeyPath<T3>, Changes<Value>.ChangesKeyPath<T4>, ((T0, T1, T2, T3, T4)) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/changes\/makenextchanges(with:from:modification:transaction:)","title":"func makeNextChanges(with: Value, from: [MutationTrace], modification: InoutRef<Value>.Modification, transaction: Transaction) -> Changes<Value>","type":"method"},{"path":"\/documentation\/verge\/changes\/map(_:)","title":"func map<U>((borrowing Value) throws -> U) rethrows -> Changes<U>","type":"method"},{"path":"\/documentation\/verge\/changes\/mapifpresent(_:)","title":"func mapIfPresent<U>(KeyPath<Value, U?>) -> Changes<U>?","type":"method"},{"path":"\/documentation\/verge\/changes\/nochanges(_:)","title":"func noChanges<T>(Changes<Value>.ChangesKeyPath<T>) -> Bool","type":"method"},{"path":"\/documentation\/verge\/changes\/nochanges(_:_:)","title":"func noChanges<T>(Changes<Value>.ChangesKeyPath<T>, some Comparison) -> Bool","type":"method"},{"path":"\/documentation\/verge\/changes\/takeifchanged(_:)","title":"func takeIfChanged<Composed>((Value) throws -> Composed) rethrows -> Composed?","type":"method"},{"path":"\/documentation\/verge\/changes\/takeifchanged(_:_:)","title":"func takeIfChanged<Composed>((Value) throws -> Composed, some Comparison) rethrows -> Composed?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/subscript(dynamicmember:)","title":"subscript<T>(dynamicMember _: KeyPath<Value, T>) -> T","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/changeskeypath","title":"Changes.ChangesKeyPath","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/verge\/changes\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/changes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/changes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/changes","title":"Changes","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/derived\/init(name:get:set:initialupstreamstate:subscribeupstreamstate:retainsupstream:)","title":"init<UpstreamState, Pipeline>(name: String?, get: Pipeline, set: ((Value) -> Void)?, initialUpstreamState: UpstreamState, subscribeUpstreamState: ((UpstreamState) -> Void) -> Cancellable, retainsUpstream: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/derived\/keepsaliveforsubscribers","title":"var keepsAliveForSubscribers: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/derived\/asderived()","title":"func asDerived() -> Derived<Value>","type":"method"},{"path":"\/documentation\/verge\/derived\/associate(_:)","title":"func associate(AnyObject)","type":"method"},{"path":"\/documentation\/verge\/derived\/chain(_:queue:)","title":"func chain<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/derived\/sinkchangedprimitivevalue(dropsfirst:queue:receive:)-5oa65","title":"func sinkChangedPrimitiveValue(dropsFirst: Bool, queue: some TargetQueueType, receive: (Value) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/derived\/sinkchangedprimitivevalue(dropsfirst:queue:receive:)-5oyia","title":"func sinkChangedPrimitiveValue(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Value) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/derived\/statedidupdate(newstate:)","title":"func stateDidUpdate(newState: Changes<Value>)","type":"method"},{"path":"\/documentation\/verge\/derived\/valuepublisher()","title":"func valuePublisher() -> some Publisher<Changes<Value>, Never>\n","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/derived\/combined(_:_:_:queue:)","title":"static func combined<S0, S1, S2>(Derived<S0>, Derived<S1>, Derived<S2>, queue: some TargetQueueType) -> Derived<Edge<(Changes<S0>, Changes<S1>, Changes<S2>)>>","type":"method"},{"path":"\/documentation\/verge\/derived\/combined(_:_:queue:)","title":"static func combined<S0, S1>(Derived<S0>, Derived<S1>, queue: some TargetQueueType) -> Derived<Edge<(Changes<S0>, Changes<S1>)>>","type":"method"},{"path":"\/documentation\/verge\/derived\/constant(_:)","title":"static func constant(Value) -> Derived<Value>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/derived\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/verge\/derived\/==(_:_:)","title":"static func == (Derived<Value>, Derived<Value>) -> Bool","type":"op"}],"path":"\/documentation\/verge\/derived\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/derived\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/verge\/derived\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/derived","title":"Derived","type":"class"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/dispatchertype\/activity","title":"Activity","type":"associatedtype"},{"path":"\/documentation\/verge\/dispatchertype\/scope-swift.associatedtype","title":"Scope","type":"associatedtype"},{"path":"\/documentation\/verge\/dispatchertype\/state-swift.associatedtype","title":"State","type":"associatedtype"},{"path":"\/documentation\/verge\/dispatchertype\/wrappedstore","title":"WrappedStore","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/dispatchertype\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/verge\/dispatchertype\/scope-9csfg","title":"var scope: WritableKeyPath<Self.Scope, Self.Scope>","type":"property"}],"title":"DispatcherType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/dispatchertype\/scope-77bmn","title":"var scope: WritableKeyPath<Self.State, Self.Scope>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/verge\/dispatchertype\/state-2r1u","title":"var state: Changes<Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/dispatchertype\/state-7soq0","title":"var state: Changes<Self.Scope>","type":"property"}],"title":"DispatcherType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/dispatchertype\/state-5pyqn","title":"var state: Changes<Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/dispatchertype\/store","title":"var store: Self.WrappedStore","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/dispatchertype\/assign(queue:to:)-43mh2","title":"func assign(queue: MainActorTargetQueue, to: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assign(queue:to:)-7tupf","title":"func assign(queue: some TargetQueueType, to: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:)-2r85b","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:)-4rt4q","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:)-77ffc","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Value>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:)-9w7eu","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Value?>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:)-d8wr","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>) -> Self.Assignee<Value>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:)-yh0a","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Changes<Value?>>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:dropsoutput:)-5nft2","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>, dropsOutput: (Changes<Value?>) -> Bool) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:dropsoutput:)-6dtm6","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>, dropsOutput: (Changes<Value?>) -> Bool) -> Self.Assignee<Changes<Value?>>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/assignee(_:dropsoutput:)-971wr","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>, dropsOutput: (Changes<Value>) -> Bool) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/bindingderived(_:_:_:_:get:set:queue:)","title":"func bindingDerived<Pipeline>(String, StaticString, StaticString, UInt, get: Pipeline, set: (inout InoutRef<Self.State>, Pipeline.Output) -> Void, queue: some TargetQueueType) -> BindingDerived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/bindingderived(_:_:_:_:select:queue:)","title":"func bindingDerived<Select>(String, StaticString, StaticString, UInt, select: WritableKeyPath<Self.State, Select>, queue: some TargetQueueType) -> BindingDerived<Select>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/commit(_:_:_:_:mutation:)-3u1jl","title":"func commit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/commit(_:_:_:_:mutation:)-6iy1c","title":"func commit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/derived(_:queue:)-22tkb","title":"func derived<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/derived(_:queue:)-40c3h","title":"func derived<Pipeline>(Pipeline, queue: MainActorTargetQueue) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/detached(by:)","title":"func detached<NewScope>(by: WritableKeyPath<Self.Scope, NewScope>) -> DetachedDispatcher<Self.WrappedStore.State, Self.WrappedStore.Activity, NewScope>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/detached(from:)","title":"func detached<NewScope>(from: WritableKeyPath<Self.WrappedStore.State, NewScope>) -> DetachedDispatcher<Self.WrappedStore.State, Self.WrappedStore.Activity, NewScope>","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/send(_:_:_:_:)","title":"func send(Self.WrappedStore.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/send(_:_:_:_:_:)","title":"func send(String, Self.WrappedStore.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkactivity(queue:receive:)-4bz66","title":"func sinkActivity(queue: some TargetQueueType, receive: (Self.Activity) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkactivity(queue:receive:)-c0t9","title":"func sinkActivity(queue: MainActorTargetQueue, receive: (Self.Activity) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(dropsfirst:queue:receive:)-35dk7","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(dropsfirst:queue:receive:)-47c61","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(dropsfirst:queue:receive:)-77qmh","title":"func sinkState(dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(dropsfirst:queue:receive:)-9elcg","title":"func sinkState(dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(scan:dropsfirst:queue:receive:)-1nesm","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.Scope>, Accumulate>, dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(scan:dropsfirst:queue:receive:)-3mruh","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.State>, Accumulate>, dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.State>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(scan:dropsfirst:queue:receive:)-6e0kb","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.State>, Accumulate>, dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.State>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/dispatchertype\/sinkstate(scan:dropsfirst:queue:receive:)-8cxg5","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.Scope>, Accumulate>, dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.Scope>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/dispatchertype\/assignee","title":"DispatcherType.Assignee","type":"typealias"}],"path":"\/documentation\/verge\/dispatchertype","title":"DispatcherType","type":"protocol"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/verge\/activity","title":"Activity","type":"article"},{"path":"\/documentation\/verge\/computedproperty","title":"Computed Property","type":"article"},{"path":"\/documentation\/verge\/mutation","title":"Mutation","type":"article"},{"path":"\/documentation\/verge\/state","title":"Thinking in single state tree (Not enforced)","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/anytargetqueue\/execute(_:)","title":"func execute(() -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/anytargetqueue\/specific(_:)","title":"static func specific(DispatchQueue) -> AnyTargetQueue","type":"method"},{"path":"\/documentation\/verge\/anytargetqueue\/startsfromcurrentthread(anduse:)-8n0uy","title":"static func startsFromCurrentThread(andUse: MainActorTargetQueue) -> AnyTargetQueue","type":"method"},{"path":"\/documentation\/verge\/anytargetqueue\/startsfromcurrentthread(anduse:)-8pzke","title":"static func startsFromCurrentThread(andUse: some TargetQueueType) -> AnyTargetQueue","type":"method"}],"path":"\/documentation\/verge\/anytargetqueue\/targetqueuetype-implementations","title":"TargetQueueType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/anytargetqueue","title":"AnyTargetQueue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstore\/init(initialstate:)","title":"init(initialState: State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstore\/lateststate","title":"var latestState: Changes<State>","type":"property"},{"path":"\/documentation\/verge\/asyncstore\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"},{"path":"\/documentation\/verge\/asyncstore\/state-swift.property","title":"var state: Changes<State>","type":"property"},{"path":"\/documentation\/verge\/asyncstore\/store","title":"var store: AsyncStore<State, Activity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstore\/backgroundcommit(mutation:)-4j3fw","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<State>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/backgroundcommit(mutation:)-5b65d","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<State>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/derived(_:queue:)","title":"func derived<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/send(_:_:_:_:)","title":"func send(Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/sinkstate(dropsfirst:queue:receive:)-3ch0g","title":"func sinkState(dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/sinkstate(dropsfirst:queue:receive:)-6bbd2","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<State>) -> Void) -> StoreSubscription","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstore\/scope-swift.typealias","title":"AsyncStore.Scope","type":"typealias"},{"path":"\/documentation\/verge\/asyncstore\/state-swift.typealias","title":"AsyncStore.State","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstore\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"path":"\/documentation\/verge\/asyncstore\/scope-swift.property","title":"var scope: WritableKeyPath<Self.Scope, Self.Scope>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstore\/backgroundcommit(mutation:)-1u7wx","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/backgroundcommit(mutation:)-3w38w","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/backgroundcommit(mutation:)-6x03f","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstore\/backgroundcommit(mutation:)-9wu07","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"}],"path":"\/documentation\/verge\/asyncstore\/asyncstoredrivertype-implementations","title":"AsyncStoreDriverType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/asyncstore","title":"AsyncStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/bindingderived\/projectedvalue","title":"var projectedValue: BindingDerived<Value>","type":"property"},{"path":"\/documentation\/verge\/bindingderived\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/verge\/bindingderived","title":"BindingDerived","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/defaultstorelogger\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/defaultstorelogger\/activitylog","title":"let activityLog: OSLog","type":"property"},{"path":"\/documentation\/verge\/defaultstorelogger\/commitlog","title":"let commitLog: OSLog","type":"property"},{"path":"\/documentation\/verge\/defaultstorelogger\/dispatchercreationlog","title":"let dispatcherCreationLog: OSLog","type":"property"},{"path":"\/documentation\/verge\/defaultstorelogger\/dispatcherdestructionlog","title":"let dispatcherDestructionLog: OSLog","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/defaultstorelogger\/didcommit(log:sender:)","title":"func didCommit(log: CommitLog, sender: AnyObject)","type":"method"},{"path":"\/documentation\/verge\/defaultstorelogger\/didcreatedispatcher(log:sender:)","title":"func didCreateDispatcher(log: DidCreateDispatcherLog, sender: AnyObject)","type":"method"},{"path":"\/documentation\/verge\/defaultstorelogger\/diddestroydispatcher(log:sender:)","title":"func didDestroyDispatcher(log: DidDestroyDispatcherLog, sender: AnyObject)","type":"method"},{"path":"\/documentation\/verge\/defaultstorelogger\/didsendactivity(log:sender:)","title":"func didSendActivity(log: ActivityLog, sender: AnyObject)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/defaultstorelogger\/shared","title":"static let shared: DefaultStoreLogger","type":"property"}],"path":"\/documentation\/verge\/defaultstorelogger","title":"DefaultStoreLogger","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/detacheddispatcher\/scope","title":"let scope: WritableKeyPath<State, Scope>","type":"property"},{"path":"\/documentation\/verge\/detacheddispatcher\/store","title":"let store: Store<State, Activity>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/detacheddispatcher\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"path":"\/documentation\/verge\/detacheddispatcher\/state","title":"var state: Changes<Self.Scope>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/detacheddispatcher\/assign(queue:to:)","title":"func assign(queue: MainActorTargetQueue, to: (Changes<Self.State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:)-25snj","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Value>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:)-6wgay","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:)-75cay","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Value?>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:)-7a4p7","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>) -> Self.Assignee<Value>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:)-9llbx","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:)-jyrz","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>) -> Self.Assignee<Changes<Value?>>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:dropsoutput:)-2vv09","title":"func assignee<Value>(WritableKeyPath<Self.State, Value>, dropsOutput: (Changes<Value>) -> Bool) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:dropsoutput:)-6m5rk","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>, dropsOutput: (Changes<Value?>) -> Bool) -> Self.Assignee<Changes<Value>>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee(_:dropsoutput:)-9ily8","title":"func assignee<Value>(WritableKeyPath<Self.State, Value?>, dropsOutput: (Changes<Value?>) -> Bool) -> Self.Assignee<Changes<Value?>>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/bindingderived(_:_:_:_:get:set:queue:)","title":"func bindingDerived<Pipeline>(String, StaticString, StaticString, UInt, get: Pipeline, set: (inout InoutRef<Self.State>, Pipeline.Output) -> Void, queue: some TargetQueueType) -> BindingDerived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/bindingderived(_:_:_:_:select:queue:)","title":"func bindingDerived<Select>(String, StaticString, StaticString, UInt, select: WritableKeyPath<Self.State, Select>, queue: some TargetQueueType) -> BindingDerived<Select>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/commit(_:_:_:_:mutation:)-3lvse","title":"func commit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/commit(_:_:_:_:mutation:)-84ci7","title":"func commit<Result>(String, StaticString, StaticString, UInt, mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/derived(_:queue:)-2nkv2","title":"func derived<Pipeline>(Pipeline, queue: MainActorTargetQueue) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/derived(_:queue:)-7xpcz","title":"func derived<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/detached(by:)","title":"func detached<NewScope>(by: WritableKeyPath<Self.Scope, NewScope>) -> DetachedDispatcher<Self.WrappedStore.State, Self.WrappedStore.Activity, NewScope>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/detached(from:)","title":"func detached<NewScope>(from: WritableKeyPath<Self.WrappedStore.State, NewScope>) -> DetachedDispatcher<Self.WrappedStore.State, Self.WrappedStore.Activity, NewScope>","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/send(_:_:_:_:)","title":"func send(Self.WrappedStore.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/send(_:_:_:_:_:)","title":"func send(String, Self.WrappedStore.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkactivity(queue:receive:)-2rm3e","title":"func sinkActivity(queue: MainActorTargetQueue, receive: (Self.Activity) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkactivity(queue:receive:)-9en8t","title":"func sinkActivity(queue: some TargetQueueType, receive: (Self.Activity) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkstate(dropsfirst:queue:receive:)","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkstate(scan:dropsfirst:queue:receive:)-13n2","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.State>, Accumulate>, dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.State>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkstate(scan:dropsfirst:queue:receive:)-262uk","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.State>, Accumulate>, dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.State>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkstate(scan:dropsfirst:queue:receive:)-78nw0","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.Scope>, Accumulate>, dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/detacheddispatcher\/sinkstate(scan:dropsfirst:queue:receive:)-9iuwt","title":"func sinkState<Accumulate>(scan: Scan<Changes<Self.Scope>, Accumulate>, dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.Scope>, Accumulate) -> Void) -> StoreSubscription","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/detacheddispatcher\/assignee","title":"DetachedDispatcher.Assignee","type":"typealias"}],"path":"\/documentation\/verge\/detacheddispatcher\/dispatchertype-implementations","title":"DispatcherType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/detacheddispatcher","title":"DetachedDispatcher","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/init(eventemitter:)","title":"init(eventEmitter: EventEmitter<Event>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/receive(subscriber:)","title":"func receive<S>(subscriber: S)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/failure","title":"EventEmitter.Publisher.Failure","type":"typealias"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/output","title":"EventEmitter.Publisher.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/values","title":"var values: AsyncPublisher<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/append(_:)","title":"func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/assertnofailure(_:file:line:)","title":"func assertNoFailure(String, file: StaticString, line: UInt) -> Publishers.AssertNoFailure<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/assign(to:)","title":"func assign(to: inout Published<Self.Output>.Publisher)","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/assign(to:on:)","title":"func assign<Root>(to: ReferenceWritableKeyPath<Root, Self.Output>, on: Root) -> AnyCancellable","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/breakpoint(receivesubscription:receiveoutput:receivecompletion:)","title":"func breakpoint(receiveSubscription: ((Subscription) -> Bool)?, receiveOutput: ((Self.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Bool)?) -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/breakpointonerror()","title":"func breakpointOnError() -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/buffer(size:prefetch:whenfull:)","title":"func buffer(size: Int, prefetch: Publishers.PrefetchStrategy, whenFull: Publishers.BufferingStrategy<Self.Failure>) -> Publishers.Buffer<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/catch(_:)","title":"func `catch`<P>((Self.Failure) -> P) -> Publishers.Catch<Self, P>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/collect()","title":"func collect() -> Publishers.Collect<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/collect(_:)","title":"func collect(Int) -> Publishers.CollectByCount<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/collect(_:options:)","title":"func collect<S>(Publishers.TimeGroupingStrategy<S>, options: S.SchedulerOptions?) -> Publishers.CollectByTime<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/combinelatest(_:)","title":"func combineLatest<P>(P) -> Publishers.CombineLatest<Self, P>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/combinelatest(_:_:)-12osd","title":"func combineLatest<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.CombineLatest<Self, P>, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/combinelatest(_:_:)-97ms2","title":"func combineLatest<P, Q>(P, Q) -> Publishers.CombineLatest3<Self, P, Q>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/combinelatest(_:_:_:)-3phkc","title":"func combineLatest<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.CombineLatest3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/combinelatest(_:_:_:)-pw3s","title":"func combineLatest<P, Q, R>(P, Q, R) -> Publishers.CombineLatest4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/combinelatest(_:_:_:_:)","title":"func combineLatest<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.CombineLatest4<Self, P, Q, R>, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/compactmap(_:)","title":"func compactMap<T>((Self.Output) -> T?) -> Publishers.CompactMap<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/contains(_:)","title":"func contains(Self.Output) -> Publishers.Contains<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/contains(where:)","title":"func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/count()","title":"func count() -> Publishers.Count<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/debounce(for:scheduler:options:)","title":"func debounce<S>(for: S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Debounce<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/decode(type:decoder:)","title":"func decode<Item, Coder>(type: Item.Type, decoder: Coder) -> Publishers.Decode<Self, Item, Coder>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/delay(for:tolerance:scheduler:options:)","title":"func delay<S>(for: S.SchedulerTimeType.Stride, tolerance: S.SchedulerTimeType.Stride?, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Delay<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/drop(untiloutputfrom:)","title":"func drop<P>(untilOutputFrom: P) -> Publishers.DropUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/drop(while:)","title":"func drop(while: (Self.Output) -> Bool) -> Publishers.DropWhile<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Publishers.Drop<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/encode(encoder:)","title":"func encode<Coder>(encoder: Coder) -> Publishers.Encode<Self, Coder>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/erasetoanypublisher()","title":"func eraseToAnyPublisher() -> AnyPublisher<Self.Output, Self.Failure>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Publishers.Filter<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/first()","title":"func first() -> Publishers.First<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/first(where:)","title":"func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/flatmap(maxpublishers:_:)-6biv9","title":"func flatMap<T, P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/flatmap(maxpublishers:_:)-8gx6n","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/flatmap(maxpublishers:_:)-9df0l","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Publishers.SetFailureType<Self, P.Failure>>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/flatmap(maxpublishers:_:)-ez4b","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<Publishers.SetFailureType<P, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/handleevents(receivesubscription:receiveoutput:receivecompletion:receivecancel:receiverequest:)","title":"func handleEvents(receiveSubscription: ((Subscription) -> Void)?, receiveOutput: ((Self.Output) -> Void)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void)?, receiveCancel: (() -> Void)?, receiveRequest: ((Subscribers.Demand) -> Void)?) -> Publishers.HandleEvents<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/ignoreoutput()","title":"func ignoreOutput() -> Publishers.IgnoreOutput<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/last()","title":"func last() -> Publishers.Last<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/last(where:)","title":"func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/makeconnectable()","title":"func makeConnectable() -> Publishers.MakeConnectable<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/map(_:)-2gxut","title":"func map<T>(KeyPath<Self.Output, T>) -> Publishers.MapKeyPath<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/map(_:)-3rzd7","title":"func map<T>((Self.Output) -> T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/map(_:_:)","title":"func map<T0, T1>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>) -> Publishers.MapKeyPath2<Self, T0, T1>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/map(_:_:_:)","title":"func map<T0, T1, T2>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>, KeyPath<Self.Output, T2>) -> Publishers.MapKeyPath3<Self, T0, T1, T2>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/maperror(_:)","title":"func mapError<E>((Self.Failure) -> E) -> Publishers.MapError<Self, E>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/max()","title":"func max() -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/max(by:)","title":"func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/measureinterval(using:options:)","title":"func measureInterval<S>(using: S, options: S.SchedulerOptions?) -> Publishers.MeasureInterval<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:)","title":"func merge(with: Self) -> Publishers.MergeMany<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:_:)","title":"func merge<B, C>(with: B, C) -> Publishers.Merge3<Self, B, C>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:_:_:)","title":"func merge<B, C, D>(with: B, C, D) -> Publishers.Merge4<Self, B, C, D>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:_:_:_:)","title":"func merge<B, C, D, E>(with: B, C, D, E) -> Publishers.Merge5<Self, B, C, D, E>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:_:_:_:_:)","title":"func merge<B, C, D, E, F>(with: B, C, D, E, F) -> Publishers.Merge6<Self, B, C, D, E, F>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G>(with: B, C, D, E, F, G) -> Publishers.Merge7<Self, B, C, D, E, F, G>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/merge(with:_:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G, H>(with: B, C, D, E, F, G, H) -> Publishers.Merge8<Self, B, C, D, E, F, G, H>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/min()","title":"func min() -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/min(by:)","title":"func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/multicast(_:)","title":"func multicast<S>(() -> S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/multicast(subject:)","title":"func multicast<S>(subject: S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/output(at:)","title":"func output(at: Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/output(in:)","title":"func output<R>(in: R) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/prefix(untiloutputfrom:)","title":"func prefix<P>(untilOutputFrom: P) -> Publishers.PrefixUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Output) -> Bool) -> Publishers.PrefixWhile<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/prepend(_:)","title":"func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/print(_:to:)","title":"func print(String, to: (TextOutputStream)?) -> Publishers.Print<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/receive(on:options:)","title":"func receive<S>(on: S, options: S.SchedulerOptions?) -> Publishers.ReceiveOn<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/reduce(_:_:)","title":"func reduce<T>(T, (T, Self.Output) -> T) -> Publishers.Reduce<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/removeduplicates()","title":"func removeDuplicates() -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Output, Self.Output) -> Bool) -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/replaceempty(with:)","title":"func replaceEmpty(with: Self.Output) -> Publishers.ReplaceEmpty<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Publishers.ReplaceError<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/replacenil(with:)","title":"func replaceNil<T>(with: T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/retry(_:)","title":"func retry(Int) -> Publishers.Retry<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/scan(_:_:)","title":"func scan<T>(T, (T, Self.Output) -> T) -> Publishers.Scan<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/setfailuretype(to:)","title":"func setFailureType<E>(to: E.Type) -> Publishers.SetFailureType<Self, E>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/share()","title":"func share() -> Publishers.Share<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/sink(receivecompletion:receivevalue:)","title":"func sink(receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void), receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/sink(receivevalue:)","title":"func sink(receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/subscribe(_:)-29f79","title":"func subscribe<S>(S)","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/subscribe(_:)-9lpcg","title":"func subscribe<S>(S) -> AnyCancellable","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/subscribe(on:options:)","title":"func subscribe<S>(on: S, options: S.SchedulerOptions?) -> Publishers.SubscribeOn<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/switchtolatest()","title":"func switchToLatest() -> Publishers.SwitchToLatest<Self.Output, Publishers.SetFailureType<Self, Self.Output.Failure>>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/throttle(for:scheduler:latest:)","title":"func throttle<S>(for: S.SchedulerTimeType.Stride, scheduler: S, latest: Bool) -> Publishers.Throttle<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/timeout(_:scheduler:options:customerror:)","title":"func timeout<S>(S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?, customError: (() -> Self.Failure)?) -> Publishers.Timeout<Self, S>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryallsatisfy(_:)","title":"func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trycatch(_:)","title":"func tryCatch<P>((Self.Failure) throws -> P) -> Publishers.TryCatch<Self, P>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trycompactmap(_:)","title":"func tryCompactMap<T>((Self.Output) throws -> T?) -> Publishers.TryCompactMap<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trycontains(where:)","title":"func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trydrop(while:)","title":"func tryDrop(while: (Self.Output) throws -> Bool) -> Publishers.TryDropWhile<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryfilter(_:)","title":"func tryFilter((Self.Output) throws -> Bool) -> Publishers.TryFilter<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryfirst(where:)","title":"func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trylast(where:)","title":"func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trymap(_:)","title":"func tryMap<T>((Self.Output) throws -> T) -> Publishers.TryMap<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trymax(by:)","title":"func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/trymin(by:)","title":"func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryprefix(while:)","title":"func tryPrefix(while: (Self.Output) throws -> Bool) -> Publishers.TryPrefixWhile<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryreduce(_:_:)","title":"func tryReduce<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryReduce<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryremoveduplicates(by:)","title":"func tryRemoveDuplicates(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryRemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/tryscan(_:_:)","title":"func tryScan<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryScan<Self, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/zip(_:)","title":"func zip<P>(P) -> Publishers.Zip<Self, P>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/zip(_:_:)-5lssh","title":"func zip<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.Zip<Self, P>, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/zip(_:_:)-6j2gl","title":"func zip<P, Q>(P, Q) -> Publishers.Zip3<Self, P, Q>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/zip(_:_:_:)-32kld","title":"func zip<P, Q, R>(P, Q, R) -> Publishers.Zip4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/zip(_:_:_:)-o7la","title":"func zip<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.Zip3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/zip(_:_:_:_:)","title":"func zip<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.Zip4<Self, P, Q, R>, T>","type":"method"}],"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct\/publisher-implementations","title":"Publisher Implementations","type":"symbol"}],"path":"\/documentation\/verge\/eventemitter\/publisher-swift.struct","title":"EventEmitter.Publisher","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/subscription\/combineidentifier","title":"let combineIdentifier: CombineIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/subscription\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/subscription\/request(_:)","title":"func request(Subscribers.Demand)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/subscription\/store(in:)","title":"func store(in: inout Set<AnyCancellable>)","type":"method"}],"path":"\/documentation\/verge\/eventemitter\/subscription\/cancellable-implementations","title":"Cancellable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/eventemitter\/subscription","title":"EventEmitter.Subscription","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/publisher-swift.property","title":"var publisher: EventEmitter<Event>.Publisher","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemitter\/ondeinit(_:)","title":"func onDeinit(() -> Void)","type":"method"},{"path":"\/documentation\/verge\/eventemitter\/receiveevent(_:)","title":"func receiveEvent(consuming Event)","type":"method"}],"path":"\/documentation\/verge\/eventemitter","title":"EventEmitter","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemittercancellable\/==(_:_:)","title":"static func == (EventEmitterCancellable, EventEmitterCancellable) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemittercancellable\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/verge\/eventemittercancellable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemittercancellable\/store(in:)","title":"func store(in: inout Set<AnyCancellable>)","type":"method"}],"path":"\/documentation\/verge\/eventemittercancellable\/cancellable-implementations","title":"Cancellable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/eventemittercancellable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/eventemittercancellable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/eventemittercancellable","title":"EventEmitterCancellable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/instancepool\/init(keyselector:shouldupdate:)","title":"init<Key>(keySelector: (Source) -> Key, shouldUpdate: (Source, Source) -> Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/instancepool\/compactmap(from:sweepsunused:makenew:update:)","title":"func compactMap<C>(from: C, sweepsUnused: Bool, makeNew: (C.Element) throws -> Target?, update: (C.Element, inout Target) -> Void) rethrows -> [Target]","type":"method"},{"path":"\/documentation\/verge\/instancepool\/map(from:sweepsunused:makenew:update:)","title":"func map<C>(from: C, sweepsUnused: Bool, makeNew: (C.Element) throws -> Target, update: (C.Element, inout Target) -> Void) rethrows -> [Target]","type":"method"},{"path":"\/documentation\/verge\/instancepool\/purgecache()","title":"func purgeCache()","type":"method"}],"path":"\/documentation\/verge\/instancepool","title":"InstancePool","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstore\/init(initialstate:)","title":"init(initialState: State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstore\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"},{"path":"\/documentation\/verge\/mainactorstore\/state-swift.property","title":"var state: Changes<State>","type":"property"},{"path":"\/documentation\/verge\/mainactorstore\/store","title":"var store: MainActorStore<State, Activity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstore\/commit(mutation:)-1en10","title":"func commit<Result>(mutation: (inout InoutRef<State>, inout Transaction) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/commit(mutation:)-6bfj7","title":"func commit<Result>(mutation: (inout InoutRef<State>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/derived(_:queue:)","title":"func derived<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/send(_:_:_:_:)","title":"func send(Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/sinkstate(dropsfirst:queue:receive:)-3yqix","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<State>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/sinkstate(dropsfirst:queue:receive:)-5dc4n","title":"func sinkState(dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<State>) -> Void) -> StoreSubscription","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstore\/scope-swift.typealias","title":"MainActorStore.Scope","type":"typealias"},{"path":"\/documentation\/verge\/mainactorstore\/state-swift.typealias","title":"MainActorStore.State","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstore\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"path":"\/documentation\/verge\/mainactorstore\/scope-swift.property","title":"var scope: WritableKeyPath<Self.Scope, Self.Scope>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstore\/commit(mutation:)-64kto","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/commit(mutation:)-7kk31","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstore\/commit(mutation:)-dgby","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"}],"path":"\/documentation\/verge\/mainactorstore\/mainactorstoredrivertype-implementations","title":"MainActorStoreDriverType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/mainactorstore","title":"MainActorStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactortargetqueue\/mode-swift.property","title":"let mode: MainActorTargetQueue.Mode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactortargetqueue\/execute(_:)","title":"func execute(() -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactortargetqueue\/asyncmain","title":"static var asyncMain: MainActorTargetQueue","type":"property"},{"path":"\/documentation\/verge\/mainactortargetqueue\/main","title":"static var main: MainActorTargetQueue","type":"property"},{"path":"\/documentation\/verge\/mainactortargetqueue\/sharedimmediacy","title":"static let sharedImmediacy: MainActorTargetQueue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactortargetqueue\/mainisolated()","title":"static func mainIsolated() -> MainActorTargetQueue","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactortargetqueue\/mode-swift.enum\/alwaysdispatch","title":"case alwaysDispatch","type":"case"},{"path":"\/documentation\/verge\/mainactortargetqueue\/mode-swift.enum\/immediacy","title":"case immediacy","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactortargetqueue\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/mainactortargetqueue\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/mainactortargetqueue\/mode-swift.enum","title":"MainActorTargetQueue.Mode","type":"enum"}],"path":"\/documentation\/verge\/mainactortargetqueue","title":"MainActorTargetQueue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/readref\/init(_:)","title":"init(UnsafePointer<Wrapped>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/readref\/wrapped","title":"var wrapped: Wrapped","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/readref\/subscript(dynamicmember:)-5johm","title":"subscript<T>(dynamicMember _: KeyPath<Wrapped, T>) -> T","type":"subscript"},{"path":"\/documentation\/verge\/readref\/subscript(dynamicmember:)-6a9tm","title":"subscript<T>(dynamicMember _: KeyPath<Wrapped, T?>) -> T?","type":"subscript"},{"path":"\/documentation\/verge\/readref\/subscript(keypath:)-3muz3","title":"subscript<T>(keyPath _: KeyPath<Wrapped, T?>) -> T?","type":"subscript"},{"path":"\/documentation\/verge\/readref\/subscript(keypath:)-yua4","title":"subscript<T>(keyPath _: KeyPath<Wrapped, T>) -> T","type":"subscript"}],"path":"\/documentation\/verge\/readref","title":"ReadRef","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/runtimesanitizer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/runtimesanitizer\/isrecursivelycommitdetectionenabled","title":"var isRecursivelyCommitDetectionEnabled: Bool","type":"property"},{"path":"\/documentation\/verge\/runtimesanitizer\/issanitizerstatereceivingbycorrectorder","title":"var isSanitizerStateReceivingByCorrectOrder: Bool","type":"property"},{"path":"\/documentation\/verge\/runtimesanitizer\/ondidfindruntimeerror","title":"var onDidFindRuntimeError: (RuntimeError) -> Void","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/runtimesanitizer\/global","title":"static let global: RuntimeSanitizer","type":"property"}],"path":"\/documentation\/verge\/runtimesanitizer","title":"RuntimeSanitizer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/scan\/init(seed:accumulator:)","title":"init(seed: Accumulate, accumulator: Scan<Element, Accumulate>.Accumulator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/scan\/value","title":"var value: Accumulate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/scan\/accumulate(_:)","title":"func accumulate(Element) -> Accumulate","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/scan\/accumulator","title":"Scan.Accumulator","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/scan\/counter()","title":"static func counter() -> Scan<Element, Int>","type":"method"}],"path":"\/documentation\/verge\/scan","title":"Scan","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/storesubscription\/==(_:_:)","title":"static func == (StoreSubscription, StoreSubscription) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storesubscription\/asany()","title":"func asAny() -> AnyCancellable","type":"method"},{"path":"\/documentation\/verge\/storesubscription\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/verge\/storesubscription\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/verge\/storesubscription\/storewhilesourceactive()","title":"func storeWhileSourceActive() -> StoreSubscription","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storesubscription\/store(in:)","title":"func store(in: inout Set<AnyCancellable>)","type":"method"}],"path":"\/documentation\/verge\/storesubscription\/cancellable-implementations","title":"Cancellable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/storesubscription\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/storesubscription\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/storesubscription","title":"StoreSubscription","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/uistatestore\/init(initialstate:logger:)","title":"init(initialState: State, logger: StoreLogger?)","type":"init"}],"path":"\/documentation\/verge\/uistatestore","title":"UIStateStore","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeanycancellable\/==(_:_:)","title":"static func == (VergeAnyCancellable, VergeAnyCancellable) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeanycancellable\/init()","title":"init()","type":"init"},{"path":"\/documentation\/verge\/vergeanycancellable\/init(_:)","title":"convenience init<C>(C)","type":"init"},{"path":"\/documentation\/verge\/vergeanycancellable\/init(ondeinit:)","title":"convenience init(onDeinit: () -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeanycancellable\/associate(_:)","title":"func associate(AnyObject) -> VergeAnyCancellable","type":"method"},{"path":"\/documentation\/verge\/vergeanycancellable\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/verge\/vergeanycancellable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/verge\/vergeanycancellable\/insert(_:)","title":"func insert(Cancellable)","type":"method"},{"path":"\/documentation\/verge\/vergeanycancellable\/insert(ondeinit:)","title":"func insert(onDeinit: () -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeanycancellable\/store(in:)","title":"func store(in: inout Set<AnyCancellable>)","type":"method"}],"path":"\/documentation\/verge\/vergeanycancellable\/cancellable-implementations","title":"Cancellable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeanycancellable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/vergeanycancellable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/vergeanycancellable","title":"VergeAnyCancellable","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/anychangestype\/traces","title":"var traces: [MutationTrace]","type":"property"},{"path":"\/documentation\/verge\/anychangestype\/version","title":"var version: UInt64","type":"property"}],"path":"\/documentation\/verge\/anychangestype","title":"AnyChangesType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/activity","title":"Activity","type":"associatedtype"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/scope-swift.associatedtype","title":"Scope","type":"associatedtype"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/state-swift.associatedtype","title":"State","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/verge\/asyncstoredrivertype\/scope-4qsiy","title":"var scope: WritableKeyPath<Self.Scope, Self.Scope>","type":"property"}],"title":"AsyncStoreDriverType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/asyncstoredrivertype\/scope-26rsj","title":"var scope: WritableKeyPath<Self.State, Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/state-swift.property","title":"var state: Changes<Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/store","title":"var store: AsyncStore<Self.State, Self.Activity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-3vana","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-6svob","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-323z9","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-6u5pt","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"}],"title":"AsyncStoreDriverType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-9bkt9","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.State>) throws -> Result) async rethrows -> Result","type":"method"},{"children":[{"children":[{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-6u5pt","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-3vana","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-323z9","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-6svob","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) async rethrows -> Result","type":"method"}],"title":"AsyncStoreDriverType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/asyncstoredrivertype\/backgroundcommit(mutation:)-f9e1","title":"func backgroundCommit<Result>(mutation: (inout InoutRef<Self.State>, inout Transaction) throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/send(_:_:_:_:)","title":"func send(Self.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/sinkstate(dropsfirst:queue:receive:)-74qs2","title":"func sinkState(dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/asyncstoredrivertype\/sinkstate(dropsfirst:queue:receive:)-7hq4g","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"}],"path":"\/documentation\/verge\/asyncstoredrivertype","title":"AsyncStoreDriverType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/changestype\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/changestype\/modification","title":"var modification: InoutRef<Self.Value>.Modification?","type":"property"},{"path":"\/documentation\/verge\/changestype\/previous","title":"var previous: Self?","type":"property"},{"path":"\/documentation\/verge\/changestype\/previousprimitive","title":"var previousPrimitive: Self.Value?","type":"property"},{"path":"\/documentation\/verge\/changestype\/primitive","title":"var primitive: Self.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/changestype\/aschanges()","title":"func asChanges() -> Changes<Self.Value>","type":"method"}],"path":"\/documentation\/verge\/changestype","title":"ChangesType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/derivedmaking\/state-swift.associatedtype","title":"State","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/derivedmaking\/state-swift.property","title":"var state: Changes<Self.State>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/derivedmaking\/derived(_:queue:)","title":"func derived<Pipeline>(Pipeline, queue: some TargetQueueType) -> Derived<Pipeline.Output>","type":"method"}],"path":"\/documentation\/verge\/derivedmaking","title":"DerivedMaking","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/derivedtype\/asderived()","title":"func asDerived() -> Derived<Self.Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/derivedtype\/value","title":"DerivedType.Value","type":"typealias"}],"path":"\/documentation\/verge\/derivedtype","title":"DerivedType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/edgetype\/state","title":"State","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/edgetype\/wrappedvalue","title":"var wrappedValue: Self.State","type":"property"}],"path":"\/documentation\/verge\/edgetype","title":"EdgeType","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/hastraces\/traces","title":"var traces: [MutationTrace]","type":"property"}],"path":"\/documentation\/verge\/hastraces","title":"HasTraces","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/activity","title":"Activity","type":"associatedtype"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/scope-swift.associatedtype","title":"Scope","type":"associatedtype"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/state-swift.associatedtype","title":"State","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/rootstate","title":"var rootState: Changes<Self.State>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/verge\/mainactorstoredrivertype\/scope-55y57","title":"var scope: WritableKeyPath<Self.Scope, Self.Scope>","type":"property"}],"title":"MainActorStoreDriverType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/mainactorstoredrivertype\/scope-38u47","title":"var scope: WritableKeyPath<Self.State, Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/state-swift.property","title":"var state: Changes<Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/store","title":"var store: MainActorStore<Self.State, Self.Activity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-2y7m","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-8gvp4","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-9p14w","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"}],"title":"MainActorStoreDriverType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-3obce","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) rethrows -> Result","type":"method"},{"children":[{"children":[{"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-8gvp4","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-2y7m","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>, inout Transaction) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-9p14w","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"}],"title":"MainActorStoreDriverType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/mainactorstoredrivertype\/commit(mutation:)-5mxp8","title":"func commit<Result>(mutation: (inout InoutRef<Self.Scope>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/send(_:_:_:_:)","title":"func send(Self.Activity, StaticString, StaticString, UInt)","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/sinkstate(dropsfirst:queue:receive:)-2gb7f","title":"func sinkState(dropsFirst: Bool, queue: some TargetQueueType, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"},{"path":"\/documentation\/verge\/mainactorstoredrivertype\/sinkstate(dropsfirst:queue:receive:)-57n2w","title":"func sinkState(dropsFirst: Bool, queue: MainActorTargetQueue, receive: (Changes<Self.Scope>) -> Void) -> StoreSubscription","type":"method"}],"path":"\/documentation\/verge\/mainactorstoredrivertype","title":"MainActorStoreDriverType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelinetype\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/verge\/pipelinetype\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelinetype\/yield(_:)","title":"func yield(Self.Input) -> Self.Output","type":"method"},{"path":"\/documentation\/verge\/pipelinetype\/yieldcontinuously(_:)","title":"func yieldContinuously(Self.Input) -> ContinuousResult<Self.Output>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelinetype\/map(_:)","title":"static func map<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelinetype\/map(using:)","title":"static func map<Input, EdgeIntermediate>(using: (Input) -> PipelineIntermediate<Edge<EdgeIntermediate>>) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelinetype\/map(using:transform:)","title":"static func map<Input, Intermediate, Output>(using: (Input) -> PipelineIntermediate<Intermediate>, transform: (Intermediate) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelinetype\/select(_:)","title":"static func select<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"}],"path":"\/documentation\/verge\/pipelinetype","title":"PipelineType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/verge\/statetype\/reduce(modifying:current:)-1pu1","title":"static func reduce(modifying: inout InoutRef<Self>, current: Changes<Self>)","type":"method"}],"title":"StateType Implementations","type":"groupMarker"}],"path":"\/documentation\/verge\/statetype\/reduce(modifying:current:)-83xlo","title":"static func reduce(modifying: inout InoutRef<Self>, current: Changes<Self>)","type":"method"}],"path":"\/documentation\/verge\/statetype","title":"StateType","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storecomponenttype\/changes","title":"var changes: Changes<Self.Scope>","type":"property"},{"path":"\/documentation\/verge\/storecomponenttype\/primitivestate","title":"var primitiveState: Self.Scope","type":"property"},{"path":"\/documentation\/verge\/storecomponenttype\/store","title":"var store: Self.WrappedStore","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storecomponenttype\/activitypublisher()","title":"func activityPublisher() -> some Publisher<Self.Activity, Never>\n","type":"method"},{"path":"\/documentation\/verge\/storecomponenttype\/binding(_:with:)","title":"func binding<T>(WritableKeyPath<Self.WrappedStore.State, T>, with: ((T) -> Void)?) -> Binding<T>","type":"method"},{"path":"\/documentation\/verge\/storecomponenttype\/statepublisher()","title":"func statePublisher() -> some Publisher<Changes<Self.Scope>, Never>\n","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storecomponenttype\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/verge\/storecomponenttype\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/verge\/storecomponenttype","title":"StoreComponentType","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storelogger\/didcommit(log:sender:)","title":"func didCommit(log: CommitLog, sender: AnyObject)","type":"method"},{"path":"\/documentation\/verge\/storelogger\/didcreatedispatcher(log:sender:)","title":"func didCreateDispatcher(log: DidCreateDispatcherLog, sender: AnyObject)","type":"method"},{"path":"\/documentation\/verge\/storelogger\/diddestroydispatcher(log:sender:)","title":"func didDestroyDispatcher(log: DidDestroyDispatcherLog, sender: AnyObject)","type":"method"},{"path":"\/documentation\/verge\/storelogger\/didsendactivity(log:sender:)","title":"func didSendActivity(log: ActivityLog, sender: AnyObject)","type":"method"}],"path":"\/documentation\/verge\/storelogger","title":"StoreLogger","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/storemiddlewaretype\/state","title":"State","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storemiddlewaretype\/modify(modifyingstate:current:)","title":"func modify(modifyingState: inout InoutRef<Self.State>, current: Changes<Self.State>)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storemiddlewaretype\/modify(modify:)","title":"static func modify<State>(modify: (inout InoutRef<State>, Changes<State>) -> Void) -> Self","type":"method"}],"path":"\/documentation\/verge\/storemiddlewaretype","title":"StoreMiddlewareType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/storetype\/activity","title":"Activity","type":"associatedtype"},{"path":"\/documentation\/verge\/storetype\/state-swift.associatedtype","title":"State","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storetype\/primitivestate","title":"var primitiveState: Self.State","type":"property"},{"path":"\/documentation\/verge\/storetype\/state-swift.property","title":"var state: Changes<Self.State>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storetype\/asstore()","title":"func asStore() -> Store<Self.State, Self.Activity>","type":"method"},{"path":"\/documentation\/verge\/storetype\/binding()","title":"func binding() -> Binding<Self.State>","type":"method"},{"path":"\/documentation\/verge\/storetype\/binding(_:with:)","title":"func binding<T>(WritableKeyPath<Self.State, T>, with: ((T) -> Void)?) -> Binding<T>","type":"method"}],"path":"\/documentation\/verge\/storetype","title":"StoreType","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/targetqueuetype\/execute(_:)","title":"func execute(() -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/targetqueuetype\/asyncserialbackground","title":"static var asyncSerialBackground: Queues.AsyncBackground","type":"property"},{"path":"\/documentation\/verge\/targetqueuetype\/passthrough","title":"static var passthrough: Queues.Passthrough","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/targetqueuetype\/specific(_:)","title":"static func specific(DispatchQueue) -> AnyTargetQueue","type":"method"},{"path":"\/documentation\/verge\/targetqueuetype\/startsfromcurrentthread(anduse:)-eau0","title":"static func startsFromCurrentThread(andUse: some TargetQueueType) -> AnyTargetQueue","type":"method"},{"path":"\/documentation\/verge\/targetqueuetype\/startsfromcurrentthread(anduse:)-qi7","title":"static func startsFromCurrentThread(andUse: MainActorTargetQueue) -> AnyTargetQueue","type":"method"}],"path":"\/documentation\/verge\/targetqueuetype","title":"TargetQueueType","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/verge\/transactionkey\/value","title":"Value","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/transactionkey\/defaultvalue","title":"static var defaultValue: Self.Value","type":"property"}],"path":"\/documentation\/verge\/transactionkey","title":"TransactionKey","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/activitylog\/init(storename:trace:)","title":"init(storeName: String, trace: ActivityTrace)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/activitylog\/store","title":"let store: String","type":"property"},{"path":"\/documentation\/verge\/activitylog\/trace","title":"let trace: ActivityTrace","type":"property"},{"path":"\/documentation\/verge\/activitylog\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/verge\/activitylog","title":"ActivityLog","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/activitytrace\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/verge\/activitytrace\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/verge\/activitytrace\/function","title":"let function: String","type":"property"},{"path":"\/documentation\/verge\/activitytrace\/line","title":"let line: UInt","type":"property"},{"path":"\/documentation\/verge\/activitytrace\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/verge\/activitytrace","title":"ActivityTrace","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/anystoremiddleware\/modify(modifyingstate:current:)","title":"func modify(modifyingState: inout InoutRef<State>, current: Changes<State>)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/anystoremiddleware\/modify(modify:)","title":"static func modify<State>(modify: (inout InoutRef<State>, Changes<State>) -> Void) -> Self","type":"method"}],"path":"\/documentation\/verge\/anystoremiddleware\/storemiddlewaretype-implementations","title":"StoreMiddlewareType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/anystoremiddleware","title":"AnyStoreMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/atomicstate\/init(wrappedvalue:)","title":"init(wrappedValue: State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/atomicstate\/projectedvalue","title":"var projectedValue: Store<State, Never>","type":"property"},{"path":"\/documentation\/verge\/atomicstate\/wrappedvalue","title":"var wrappedValue: State","type":"property"}],"path":"\/documentation\/verge\/atomicstate","title":"AtomicState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/commitlog\/init(storename:traces:time:)","title":"init(storeName: String, traces: [MutationTrace], time: CFTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/commitlog\/store","title":"let store: String","type":"property"},{"path":"\/documentation\/verge\/commitlog\/tookmilliseconds","title":"let tookMilliseconds: Double","type":"property"},{"path":"\/documentation\/verge\/commitlog\/traces","title":"let traces: [MutationTrace]","type":"property"},{"path":"\/documentation\/verge\/commitlog\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/verge\/commitlog","title":"CommitLog","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/didcreatedispatcherlog\/init(storename:dispatchername:)","title":"init(storeName: String, dispatcherName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/didcreatedispatcherlog\/dispatcher","title":"let dispatcher: String","type":"property"},{"path":"\/documentation\/verge\/didcreatedispatcherlog\/store","title":"let store: String","type":"property"},{"path":"\/documentation\/verge\/didcreatedispatcherlog\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/verge\/didcreatedispatcherlog","title":"DidCreateDispatcherLog","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/diddestroydispatcherlog\/init(storename:dispatchername:)","title":"init(storeName: String, dispatcherName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/diddestroydispatcherlog\/dispatcher","title":"let dispatcher: String","type":"property"},{"path":"\/documentation\/verge\/diddestroydispatcherlog\/store","title":"let store: String","type":"property"},{"path":"\/documentation\/verge\/diddestroydispatcherlog\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/verge\/diddestroydispatcherlog","title":"DidDestroyDispatcherLog","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/middleware\/init(_:)","title":"init<C>(C)","type":"init"},{"path":"\/documentation\/verge\/edge\/middleware\/init(onset:)","title":"init(onSet: (inout Value) -> Void)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/middleware\/assert(_:_:)","title":"static func assert((Value) -> Bool, String?) -> Edge<Value>.Middleware","type":"method"},{"path":"\/documentation\/verge\/edge\/middleware\/do(_:)","title":"static func `do`((Value) -> Void) -> Edge<Value>.Middleware","type":"method"},{"path":"\/documentation\/verge\/edge\/middleware\/empty()","title":"static func empty() -> Edge<Value>.Middleware","type":"method"}],"path":"\/documentation\/verge\/edge\/middleware","title":"Edge.Middleware","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/callasfunction(_:_:)","title":"func callAsFunction(Edge<Value>, Edge<Value>) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/equality()-3jiue","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/equality()-8wvsi","title":"static func equality<each T>() -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/verge\/edge\/versioncomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/and(_:)","title":"func and<C>(C) -> AndComparison<Self.Input, Self, C>","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/or(_:)","title":"func or<C>(C) -> OrComparison<Self.Input, Self, C>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/alwaysfalse()","title":"static func alwaysFalse<T>() -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/any(_:)","title":"static func any<T>((T, T) -> Bool) -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/any(selector:)","title":"static func any<T, U>(selector: (T) -> U) -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/equality()-3jiue","title":"static func equality<T>() -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/equality()-8wvsi","title":"static func equality<each T>() -> Self","type":"method"},{"path":"\/documentation\/verge\/edge\/versioncomparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/verge\/edge\/versioncomparison\/comparison-implementations","title":"Comparison Implementations","type":"symbol"}],"path":"\/documentation\/verge\/edge\/versioncomparison","title":"Edge.VersionComparison","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/==(_:_:)-2k01h","title":"static func == (Edge<Value>, Edge<Value>) -> Bool","type":"op"},{"path":"\/documentation\/verge\/edge\/==(_:_:)-2l4h2","title":"static func == (Edge<Value>, Edge<Value>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:)-3x8o5","title":"init<S1, S2, S3, S4>(wrappedValue: (S1, S2, S3, S4), middleware: Edge<Value>.Middleware?)","type":"init"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:)-5xa6j","title":"init<S1, S2, S3, S4, S5, S6>(wrappedValue: (S1, S2, S3, S4, S5, S6), middleware: Edge<Value>.Middleware?)","type":"init"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:)-79zdj","title":"init(wrappedValue: (Value), middleware: Edge<Value>.Middleware?)","type":"init"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:)-9c7lk","title":"init<S1, S2>(wrappedValue: (S1, S2), middleware: Edge<Value>.Middleware?)","type":"init"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:)-gvc0","title":"init<S1, S2, S3>(wrappedValue: (S1, S2, S3), middleware: Edge<Value>.Middleware?)","type":"init"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:)-zfhh","title":"init<S1, S2, S3, S4, S5>(wrappedValue: (S1, S2, S3, S4, S5), middleware: Edge<Value>.Middleware?)","type":"init"},{"path":"\/documentation\/verge\/edge\/init(wrappedvalue:middleware:comparer:)","title":"init(wrappedValue: Value, middleware: Edge<Value>.Middleware?, comparer: (Value, Value) -> Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/counter","title":"var counter: NonAtomicCounter","type":"property"},{"path":"\/documentation\/verge\/edge\/globalid","title":"let globalID: UInt64","type":"property"},{"path":"\/documentation\/verge\/edge\/projectedvalue","title":"var projectedValue: Edge<Value>","type":"property"},{"path":"\/documentation\/verge\/edge\/version","title":"var version: UInt64","type":"property"},{"path":"\/documentation\/verge\/edge\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/next(_:)","title":"func next(Value) -> Edge<Value>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/subscript(dynamicmember:)-5upwu","title":"subscript<U>(dynamicMember _: WritableKeyPath<Value, U>) -> U","type":"subscript"},{"path":"\/documentation\/verge\/edge\/subscript(dynamicmember:)-85e74","title":"subscript<U>(dynamicMember _: KeyPath<Value, U?>) -> U?","type":"subscript"},{"path":"\/documentation\/verge\/edge\/subscript(dynamicmember:)-93okf","title":"subscript<U>(dynamicMember _: WritableKeyPath<Value, U?>) -> U?","type":"subscript"},{"path":"\/documentation\/verge\/edge\/subscript(dynamicmember:)-9we3r","title":"subscript<U>(dynamicMember _: KeyPath<Value, U>) -> U","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/edge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/edge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/edge","title":"Edge","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/ifchangedbox\/value","title":"let value: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/ifchangedbox\/do(_:)","title":"func `do`<Return>((consuming T) throws -> Return) rethrows -> Return?","type":"method"}],"path":"\/documentation\/verge\/ifchangedbox","title":"IfChangedBox","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/init(_:)","title":"init(UnsafeMutablePointer<Wrapped>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.property","title":"var modification: InoutRef<Wrapped>.Modification?","type":"property"},{"path":"\/documentation\/verge\/inoutref\/traces","title":"var traces: [MutationTrace]","type":"property"},{"path":"\/documentation\/verge\/inoutref\/wrapped","title":"var wrapped: Wrapped","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/hasmodified(_:)","title":"func hasModified<U>(KeyPath<Wrapped, U>) -> Bool","type":"method"},{"path":"\/documentation\/verge\/inoutref\/map(keypath:perform:)-4b54e","title":"func map<U, Result>(keyPath: WritableKeyPath<Wrapped, U>, perform: (inout InoutRef<U>) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/inoutref\/map(keypath:perform:)-79fii","title":"func map<U, Result>(keyPath: WritableKeyPath<Wrapped, U?>, perform: (inout InoutRef<U>) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/verge\/inoutref\/markasmodified()","title":"func markAsModified()","type":"method"},{"path":"\/documentation\/verge\/inoutref\/modify(_:)","title":"func modify<Return>((inout Wrapped) throws -> Return) rethrows -> Return","type":"method"},{"path":"\/documentation\/verge\/inoutref\/modifydirectly(_:)","title":"func modifyDirectly<Return>((inout Wrapped) throws -> Return) rethrows -> Return","type":"method"},{"path":"\/documentation\/verge\/inoutref\/replace(with:)","title":"func replace(with: Wrapped)","type":"method"},{"path":"\/documentation\/verge\/inoutref\/withtype(_:)","title":"func withType<Return>((Wrapped.Type, inout InoutRef<Wrapped>) throws -> Return) rethrows -> Return","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/subscript(dynamicmember:)-11ecq","title":"subscript<T>(dynamicMember _: WritableKeyPath<Wrapped, T?>) -> T?","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(dynamicmember:)-1poy8","title":"subscript<T>(dynamicMember _: KeyPath<Wrapped, T?>) -> T?","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(dynamicmember:)-5zciu","title":"subscript<T>(dynamicMember _: WritableKeyPath<Wrapped, T>) -> T","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(dynamicmember:)-t0qj","title":"subscript<T>(dynamicMember _: KeyPath<Wrapped, T>) -> T","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(keypath:)-25tsd","title":"subscript<T>(keyPath _: KeyPath<Wrapped, T>) -> T","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(keypath:)-41vpv","title":"subscript<T>(keyPath _: WritableKeyPath<Wrapped, T?>) -> T?","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(keypath:)-4mif6","title":"subscript<T>(keyPath _: KeyPath<Wrapped, T?>) -> T?","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/subscript(keypath:)-57dz0","title":"subscript<T>(keyPath _: WritableKeyPath<Wrapped, T>) -> T","type":"subscript"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/determinate(keypaths:)","title":"case determinate(keyPaths: Set<PartialKeyPath<Wrapped>>)","type":"case"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/indeterminate","title":"case indeterminate","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/subscript(dynamicmember:)-1ud5c","title":"subscript<T>(dynamicMember _: KeyPath<Wrapped, T?>) -> Bool","type":"subscript"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/subscript(dynamicmember:)-29pk8","title":"subscript<T>(dynamicMember _: KeyPath<Wrapped, T>) -> Bool","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/inoutref\/modification-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/inoutref\/modification-swift.enum","title":"InoutRef.Modification","type":"enum"}],"path":"\/documentation\/verge\/inoutref","title":"InoutRef","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/mutationtrace\/==(_:_:)","title":"static func == (MutationTrace, MutationTrace) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/mutationtrace\/init(name:file:function:line:)","title":"init(name: String, file: StaticString, function: StaticString, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/mutationtrace\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/verge\/mutationtrace\/file","title":"let file: StaticString","type":"property"},{"path":"\/documentation\/verge\/mutationtrace\/function","title":"let function: StaticString","type":"property"},{"path":"\/documentation\/verge\/mutationtrace\/line","title":"let line: UInt","type":"property"},{"path":"\/documentation\/verge\/mutationtrace\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/mutationtrace\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/mutationtrace\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/mutationtrace","title":"MutationTrace","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/nonatomiccounter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/nonatomiccounter\/value","title":"var value: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/nonatomiccounter\/increment()","title":"func increment()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/nonatomiccounter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/nonatomiccounter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/nonatomiccounter","title":"NonAtomicCounter","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelineintermediate\/==(_:_:)-3scbl","title":"static func == (PipelineIntermediate<T>, PipelineIntermediate<T>) -> Bool","type":"op"},{"path":"\/documentation\/verge\/pipelineintermediate\/==(_:_:)-7gse2","title":"static func == (PipelineIntermediate<T>, PipelineIntermediate<T>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelineintermediate\/init(value:)","title":"init(value: T)","type":"init"},{"path":"\/documentation\/verge\/pipelineintermediate\/init(value:comparer:)","title":"init(value: T, comparer: (T, T) -> Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelineintermediate\/comparer","title":"let comparer: ((T, T) -> Bool)","type":"property"},{"path":"\/documentation\/verge\/pipelineintermediate\/value","title":"var value: T","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelineintermediate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/pipelineintermediate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/pipelineintermediate","title":"PipelineIntermediate","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/referenceedge\/==(_:_:)-20kmr","title":"static func == (ReferenceEdge<State>, ReferenceEdge<State>) -> Bool","type":"op"},{"path":"\/documentation\/verge\/referenceedge\/==(_:_:)-6priy","title":"static func == (ReferenceEdge<State>, ReferenceEdge<State>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/referenceedge\/init(wrappedvalue:)","title":"init(wrappedValue: consuming State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/referenceedge\/projectedvalue","title":"var projectedValue: ReferenceEdge<State>","type":"property"},{"path":"\/documentation\/verge\/referenceedge\/wrappedvalue","title":"var wrappedValue: State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/referenceedge\/read(_:)","title":"func read<T>((borrowing State) -> T) -> T","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/referenceedge\/subscript(dynamicmember:)-2glpo","title":"subscript<U>(dynamicMember _: WritableKeyPath<State, U?>) -> U?","type":"subscript"},{"path":"\/documentation\/verge\/referenceedge\/subscript(dynamicmember:)-4kl6d","title":"subscript<U>(dynamicMember _: KeyPath<State, U>) -> U","type":"subscript"},{"path":"\/documentation\/verge\/referenceedge\/subscript(dynamicmember:)-5qj3d","title":"subscript<U>(dynamicMember _: WritableKeyPath<State, U>) -> U","type":"subscript"},{"path":"\/documentation\/verge\/referenceedge\/subscript(dynamicmember:)-wlda","title":"subscript<U>(dynamicMember _: KeyPath<State, U?>) -> U?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/referenceedge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/referenceedge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/referenceedge","title":"ReferenceEdge","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/storeobject\/init(wrappedvalue:)","title":"init(wrappedValue: () -> Store)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storeobject\/wrappedvalue","title":"var wrappedValue: Store","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storeobject\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/verge\/storeobject\/dynamicproperty-implementations","title":"DynamicProperty Implementations","type":"symbol"}],"path":"\/documentation\/verge\/storeobject","title":"StoreObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/storereader\/init(debug:_:content:)","title":"init<Store>(debug: Bool, Store, content: (inout StoreReaderComponents<StateType>.StateProxy) -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storereader\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(activationpoint:)-7leog","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(activationpoint:)-9opy7","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(named:_:)-5okgq","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(named:_:)-b1t5","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(named:_:)-zupd","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityactivationpoint(_:)-6kryv","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityactivationpoint(_:)-9bkba","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-202ib","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-2zp9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-3bm5q","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-3mxhr","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-4bdfz","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-6rt5x","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-7hiyc","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-7t8nv","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhint(_:)-36ecj","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhint(_:)-3x5s1","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhint(_:)-7yzn1","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityinputlabels(_:)-23sv","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityinputlabels(_:)-46d74","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityinputlabels(_:)-81o1y","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabel(_:)-1mkdr","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabel(_:)-2q3zp","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabel(_:)-5kbia","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-2y2ch","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-4dsgb","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-6tna5","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-9eerr","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-288n","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-39y1m","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-9snwx","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-jxjj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-1mljg","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-4exop","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-8b7yu","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-93hrx","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-3nec2","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-3ywpm","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-5i4ay","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-98vdx","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityvalue(_:)-6yl2b","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityvalue(_:)-8pchk","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityvalue(_:)-9ocuk","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:)-22cdi","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:)-96yqb","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:)-oaim","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:message:)-5557a","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:message:)-6cp1s","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:message:)-8o4dj","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:)-6d1wv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:)-9ndhq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:)-9vajx","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:message:)-4qwin","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:message:)-77vke","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:message:)-7xgtf","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alignmentguide(_:computevalue:)-25pbf","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alignmentguide(_:computevalue:)-4lg9r","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/aspectratio(_:contentmode:)-4gufv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/aspectratio(_:contentmode:)-8uzda","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(_:in:fillstyle:)-1igtq","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(_:in:fillstyle:)-8arm5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(in:fillstyle:)-42vum","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(in:fillstyle:)-60mts","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-1lh4h","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-31mdq","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-43o26","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-9d3tv","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonstyle(_:)-6ufx1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonstyle(_:)-9661y","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-577pc","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-pt5a","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-v51m","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1p7tm","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-22pqo","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5zksn","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5m73f","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-66htn","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8gwug","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3k00n","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-59tf6","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5bhh2","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentmargins(_:_:for:)-24lyh","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentmargins(_:_:for:)-8rxk5","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(_:issuppressed:)-2qgds","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(_:issuppressed:)-4kc1","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(_:issuppressed:)-7u9fy","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogconfirmationlabel(_:)-5ha5f","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogconfirmationlabel(_:)-67dw7","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogconfirmationlabel(_:)-l5sw","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogmessage(_:)-2jp5j","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogmessage(_:)-6146s","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogmessage(_:)-8zurh","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-248vp","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8ajkl","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7j5a2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8bw9y","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3yy40","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8rh8z","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1baru","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-g6qe","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporterfilenamelabel(_:)-6hhns","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporterfilenamelabel(_:)-7jei2","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporterfilenamelabel(_:)-823pj","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedobject(_:)-2us1w","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedobject(_:)-73oa7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedsceneobject(_:)-2nh0a","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedsceneobject(_:)-4re7i","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedscenevalue(_:_:)-25lwu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedscenevalue(_:_:)-5tt0b","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedvalue(_:_:)-7ez0c","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedvalue(_:_:)-81w7a","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/help(_:)-1v38m","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/help(_:)-5vkg1","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/help(_:)-6dr7f","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:)-2l9we","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:)-4pzs3","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-116gm","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-6ad75","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-80ht0","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-i0eh","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listitemtint(_:)-4r7gm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listitemtint(_:)-7vynf","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/verge\/storereader\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:)-2980q","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:)-2xsgx","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:)-6pv9y","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:displaymode:)-3oc7c","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:displaymode:)-6bupk","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:displaymode:)-d35y","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-1h5rr","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-2syo3","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-4jqcd","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-963h6","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsubtitle(_:)-2xq2x","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsubtitle(_:)-6shj","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsubtitle(_:)-6urjk","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-37k7d","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-6s7jy","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-83a82","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-89ypn","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-9obqq","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onchange(of:initial:_:)-88oty","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onchange(of:initial:_:)-8vehp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrop(of:delegate:)-8h636","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ondrop(of:delegate:)-slgg","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-1hr0u","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-2yes3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-5gw7z","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-qygm","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onpastecommand(of:perform:)-2z16v","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onpastecommand(of:perform:)-kxw8","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onpastecommand(of:validator:perform:)-70aid","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onpastecommand(of:validator:perform:)-9it65","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onreceiveactivity(_:perform:)","title":"func onReceiveActivity<D>(D, perform: (D.Activity) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onreceivestate(_:perform:)","title":"func onReceiveState<D>(D, perform: (Changes<D.State>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/padding(_:)-33wnx","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/padding(_:)-9zcp0","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/renameaction(_:)-64grd","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/renameaction(_:)-9k3gi","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareainset(edge:alignment:spacing:content:)-7iohq","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareainset(edge:alignment:spacing:content:)-8bxv6","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareapadding(_:)-2gzs5","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareapadding(_:)-9h82k","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaleeffect(_:anchor:)-7kv0j","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaleeffect(_:anchor:)-9u1p6","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1dpa4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1zxfm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9y1gi","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:placement:prompt:token:)-2nnph","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:placement:prompt:token:)-485pk","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:placement:prompt:token:)-6jwue","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:ispresented:placement:prompt:)-4qjso","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:ispresented:placement:prompt:)-5cmgy","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:ispresented:placement:prompt:)-6hidl","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:)-19c8z","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:)-1e3sv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:)-8bgrk","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:suggestions:)-4s93s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:suggestions:)-5i01d","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:suggestions:)-7umjs","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:ispresented:placement:prompt:token:)-1j7xd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:ispresented:placement:prompt:token:)-5hldz","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:ispresented:placement:prompt:token:)-5o8ah","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:placement:prompt:token:)-1tz5u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:placement:prompt:token:)-5dxry","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:placement:prompt:token:)-5fve8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2ianb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-678c9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-771t3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-10akf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-36vul","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8dleb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(content:)-1j5i8","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(content:)-5n4gg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typeselectequivalent(_:)-1pjqh","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typeselectequivalent(_:)-33c3i","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typeselectequivalent(_:)-57wte","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typesettinglanguage(_:isenabled:)-41qb3","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typesettinglanguage(_:isenabled:)-5svt1","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/verge\/storereader\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(activationpoint:)-7leog","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(activationpoint:)-9opy7","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(named:_:)-5okgq","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(named:_:)-b1t5","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaction(named:_:)-zupd","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityactivationpoint(_:)-6kryv","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityactivationpoint(_:)-9bkba","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-202ib","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-2zp9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-3bm5q","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-3mxhr","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-4bdfz","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-6rt5x","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-7hiyc","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitycustomcontent(_:_:importance:)-7t8nv","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhint(_:)-36ecj","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhint(_:)-3x5s1","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityhint(_:)-7yzn1","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityinputlabels(_:)-23sv","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityinputlabels(_:)-46d74","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityinputlabels(_:)-81o1y","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabel(_:)-1mkdr","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabel(_:)-2q3zp","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabel(_:)-5kbia","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-2y2ch","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-4dsgb","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-6tna5","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:)-9eerr","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-288n","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-39y1m","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-9snwx","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entryid:entrylabel:)-jxjj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-1mljg","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-4exop","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-8b7yu","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:entries:entrylabel:)-93hrx","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-3nec2","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-3ywpm","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-5i4ay","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotor(_:textranges:)-98vdx","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityvalue(_:)-6yl2b","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityvalue(_:)-8pchk","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityvalue(_:)-9ocuk","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:)-22cdi","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:)-96yqb","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:)-oaim","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:message:)-5557a","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:message:)-6cp1s","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:actions:message:)-8o4dj","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:)-6d1wv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:)-9ndhq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:)-9vajx","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:message:)-4qwin","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:message:)-77vke","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(_:ispresented:presenting:actions:message:)-7xgtf","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alignmentguide(_:computevalue:)-25pbf","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alignmentguide(_:computevalue:)-4lg9r","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/aspectratio(_:contentmode:)-4gufv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/aspectratio(_:contentmode:)-8uzda","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(_:in:fillstyle:)-1igtq","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(_:in:fillstyle:)-8arm5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(in:fillstyle:)-42vum","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/background(in:fillstyle:)-60mts","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-1lh4h","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-31mdq","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-43o26","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badge(_:)-9d3tv","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonstyle(_:)-6ufx1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/buttonstyle(_:)-9661y","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-577pc","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-pt5a","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-v51m","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1p7tm","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-22pqo","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5zksn","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5m73f","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-66htn","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8gwug","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3k00n","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-59tf6","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5bhh2","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentmargins(_:_:for:)-24lyh","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentmargins(_:_:for:)-8rxk5","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(_:issuppressed:)-2qgds","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(_:issuppressed:)-4kc1","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(_:issuppressed:)-7u9fy","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogconfirmationlabel(_:)-5ha5f","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogconfirmationlabel(_:)-67dw7","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogconfirmationlabel(_:)-l5sw","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogmessage(_:)-2jp5j","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogmessage(_:)-6146s","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogmessage(_:)-8zurh","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-248vp","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8ajkl","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7j5a2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8bw9y","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3yy40","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8rh8z","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1baru","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-g6qe","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporterfilenamelabel(_:)-6hhns","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporterfilenamelabel(_:)-7jei2","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileexporterfilenamelabel(_:)-823pj","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedobject(_:)-2us1w","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedobject(_:)-73oa7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedsceneobject(_:)-2nh0a","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedsceneobject(_:)-4re7i","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedscenevalue(_:_:)-25lwu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedscenevalue(_:_:)-5tt0b","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedvalue(_:_:)-7ez0c","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/focusedvalue(_:_:)-81w7a","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/help(_:)-1v38m","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/help(_:)-5vkg1","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/help(_:)-6dr7f","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:)-2l9we","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:)-4pzs3","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-116gm","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-6ad75","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-80ht0","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:)-i0eh","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listitemtint(_:)-4r7gm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listitemtint(_:)-7vynf","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/verge\/storereader\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:)-2980q","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:)-2xsgx","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:)-6pv9y","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:displaymode:)-3oc7c","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:displaymode:)-6bupk","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationbartitle(_:displaymode:)-d35y","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-1h5rr","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-2syo3","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-4jqcd","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationdocument(_:preview:)-963h6","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsubtitle(_:)-2xq2x","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsubtitle(_:)-6shj","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationsubtitle(_:)-6urjk","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-37k7d","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-6s7jy","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-83a82","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-89ypn","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/navigationtitle(_:)-9obqq","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onchange(of:initial:_:)-88oty","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onchange(of:initial:_:)-8vehp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrop(of:delegate:)-8h636","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ondrop(of:delegate:)-slgg","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-1hr0u","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-2yes3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-5gw7z","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ondrop(of:istargeted:perform:)-qygm","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onpastecommand(of:perform:)-2z16v","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onpastecommand(of:perform:)-kxw8","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/onpastecommand(of:validator:perform:)-70aid","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onpastecommand(of:validator:perform:)-9it65","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onreceiveactivity(_:perform:)","title":"func onReceiveActivity<D>(D, perform: (D.Activity) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onreceivestate(_:perform:)","title":"func onReceiveState<D>(D, perform: (Changes<D.State>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/padding(_:)-33wnx","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/padding(_:)-9zcp0","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/renameaction(_:)-64grd","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/renameaction(_:)-9k3gi","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareainset(edge:alignment:spacing:content:)-7iohq","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareainset(edge:alignment:spacing:content:)-8bxv6","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareapadding(_:)-2gzs5","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareapadding(_:)-9h82k","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaleeffect(_:anchor:)-7kv0j","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaleeffect(_:anchor:)-9u1p6","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1dpa4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1zxfm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9y1gi","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:placement:prompt:token:)-2nnph","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:placement:prompt:token:)-485pk","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:editabletokens:placement:prompt:token:)-6jwue","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:ispresented:placement:prompt:)-4qjso","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:ispresented:placement:prompt:)-5cmgy","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:ispresented:placement:prompt:)-6hidl","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:)-19c8z","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:)-1e3sv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:)-8bgrk","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:suggestions:)-4s93s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:suggestions:)-5i01d","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/verge\/storereader\/searchable(text:placement:prompt:suggestions:)-7umjs","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:ispresented:placement:prompt:token:)-1j7xd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:ispresented:placement:prompt:token:)-5hldz","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:ispresented:placement:prompt:token:)-5o8ah","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:placement:prompt:token:)-1tz5u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:placement:prompt:token:)-5dxry","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:placement:prompt:token:)-5fve8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2ianb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-678c9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-771t3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-10akf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-36vul","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8dleb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(content:)-1j5i8","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(content:)-5n4gg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typeselectequivalent(_:)-1pjqh","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typeselectequivalent(_:)-33c3i","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typeselectequivalent(_:)-57wte","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typesettinglanguage(_:isenabled:)-41qb3","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/typesettinglanguage(_:isenabled:)-5svt1","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/verge\/storereader\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/verge\/storereader\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/verge\/storereader","title":"StoreReader","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/transaction\/init()","title":"init()","type":"init"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/transaction\/subscript(_:)","title":"subscript<K>(K.Type) -> K.Value","type":"subscript"}],"path":"\/documentation\/verge\/transaction","title":"Transaction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/uistate\/init(wrappedvalue:)","title":"init(wrappedValue: State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/uistate\/projectedvalue","title":"var projectedValue: UIStateStore<State, Never>","type":"property"},{"path":"\/documentation\/verge\/uistate\/wrappedvalue","title":"var wrappedValue: State","type":"property"}],"path":"\/documentation\/verge\/uistate","title":"UIState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergesignposttransaction\/init(_:)","title":"init(StaticString)","type":"init"},{"path":"\/documentation\/verge\/vergesignposttransaction\/init(_:label:)","title":"init(StaticString, label: () -> String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/vergesignposttransaction\/rawid","title":"let rawID: os_signpost_id_t","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergesignposttransaction\/end()","title":"func end()","type":"method"},{"path":"\/documentation\/verge\/vergesignposttransaction\/event(name:)","title":"func event(name: StaticString)","type":"method"},{"path":"\/documentation\/verge\/vergesignposttransaction\/event(name:label:)","title":"func event(name: StaticString, label: () -> String)","type":"method"}],"path":"\/documentation\/verge\/vergesignposttransaction","title":"VergeSignpostTransaction","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/verge\/vergesignpostevent(_:)","title":"func vergeSignpostEvent(StaticString)","type":"func"},{"path":"\/documentation\/verge\/vergesignpostevent(_:label:)","title":"func vergeSignpostEvent(StaticString, label: () -> String)","type":"func"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:_:_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3, U4, U5, U6, U7, U8, U9>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, KeyPath<State, U4>, KeyPath<State, U5>, KeyPath<State, U6>, KeyPath<State, U7>, KeyPath<State, U8>, KeyPath<State, U9>, onChanged: (U0, U1, U2, U3, U4, U5, U6, U7, U8, U9) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3, U4, U5, U6, U7, U8>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, KeyPath<State, U4>, KeyPath<State, U5>, KeyPath<State, U6>, KeyPath<State, U7>, KeyPath<State, U8>, onChanged: (U0, U1, U2, U3, U4, U5, U6, U7, U8) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3, U4, U5, U6, U7>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, KeyPath<State, U4>, KeyPath<State, U5>, KeyPath<State, U6>, KeyPath<State, U7>, onChanged: (U0, U1, U2, U3, U4, U5, U6, U7) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3, U4, U5, U6>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, KeyPath<State, U4>, KeyPath<State, U5>, KeyPath<State, U6>, onChanged: (U0, U1, U2, U3, U4, U5, U6) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3, U4, U5>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, KeyPath<State, U4>, KeyPath<State, U5>, onChanged: (U0, U1, U2, U3, U4, U5) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3, U4>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, KeyPath<State, U4>, onChanged: (U0, U1, U2, U3, U4) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2, U3>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, KeyPath<State, U3>, onChanged: (U0, U1, U2, U3) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1, U2>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, KeyPath<State, U2>, onChanged: (U0, U1, U2) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:_:onchanged:)","title":"macro ifChanged<State, U0, U1>(Changes<State>, KeyPath<State, U0>, KeyPath<State, U1>, onChanged: (U0, U1) -> Void)","type":"macro"},{"path":"\/documentation\/verge\/ifchanged(_:_:onchanged:)","title":"macro ifChanged<State, U0>(Changes<State>, KeyPath<State, U0>, onChanged: (U0) -> Void)","type":"macro"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/cachedmapstorage","title":"CachedMapStorage","type":"typealias"},{"path":"\/documentation\/verge\/cancellabletype","title":"CancellableType","type":"typealias"},{"path":"\/documentation\/verge\/noactivitystorebase","title":"NoActivityStoreBase","type":"typealias"},{"path":"\/documentation\/verge\/storewrappertype","title":"StoreWrapperType","type":"typealias"},{"path":"\/documentation\/verge\/vergeanycancellables","title":"VergeAnyCancellables","type":"typealias"},{"path":"\/documentation\/verge\/viewmodelbase","title":"ViewModelBase","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/verge\/continuousresult\/new(_:)","title":"case new(Output)","type":"case"},{"path":"\/documentation\/verge\/continuousresult\/noupdates","title":"case noUpdates","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/continuousresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/continuousresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/continuousresult","title":"ContinuousResult","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:)-5byyo","title":"static func buildBlock<S1>(S1) -> PipelineIntermediate<S1>","type":"method"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:)-h0tj","title":"static func buildBlock<IntermediateValue>(PipelineIntermediate<IntermediateValue>) -> PipelineIntermediate<IntermediateValue>","type":"method"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:_:)","title":"static func buildBlock<S1, S2>(S1, S2) -> PipelineIntermediate<(S1, S2)>","type":"method"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:_:_:)","title":"static func buildBlock<S1, S2, S3>(S1, S2, S3) -> PipelineIntermediate<(S1, S2, S3)>","type":"method"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:_:_:_:)","title":"static func buildBlock<S1, S2, S3, S4>(S1, S2, S3, S4) -> PipelineIntermediate<(S1, S2, S3, S4)>","type":"method"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:_:_:_:_:)","title":"static func buildBlock<S1, S2, S3, S4, S5>(S1, S2, S3, S4, S5) -> PipelineIntermediate<(S1, S2, S3, S4, S5)>","type":"method"},{"path":"\/documentation\/verge\/pipelineintermediatebuilder\/buildblock(_:_:_:_:_:_:)","title":"static func buildBlock<S1, S2, S3, S4, S5, S6>(S1, S2, S3, S4, S5, S6) -> PipelineIntermediate<(S1, S2, S3, S4, S5, S6)>","type":"method"}],"path":"\/documentation\/verge\/pipelineintermediatebuilder","title":"PipelineIntermediateBuilder","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/init(map:additionaldropcondition:)","title":"init(map: (Input) -> Output, additionalDropCondition: ((Input) -> Bool)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/additionaldropcondition","title":"let additionalDropCondition: ((Input) -> Bool)?","type":"property"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/map","title":"let map: (Input) -> Output","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/drop(while:)","title":"func drop(while: (Input) -> Bool) -> Pipelines.BasicMapPipeline<Input, Output>","type":"method"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/yield(_:)","title":"func yield(Input) -> Output","type":"method"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/yieldcontinuously(_:)","title":"func yieldContinuously(Input) -> ContinuousResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/map(_:)","title":"static func map<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/map(using:)","title":"static func map<Input, EdgeIntermediate>(using: (Input) -> PipelineIntermediate<Edge<EdgeIntermediate>>) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/map(using:transform:)","title":"static func map<Input, Intermediate, Output>(using: (Input) -> PipelineIntermediate<Intermediate>, transform: (Intermediate) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/select(_:)","title":"static func select<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"}],"path":"\/documentation\/verge\/pipelines\/basicmappipeline\/pipelinetype-implementations","title":"PipelineType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/pipelines\/basicmappipeline","title":"Pipelines.BasicMapPipeline","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/init(intermediate:transform:additionaldropcondition:)","title":"init(intermediate: (Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input.Value) -> PipelineIntermediate<Intermediate>, transform: (Intermediate) -> Output, additionalDropCondition: ((Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input) -> Bool)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/additionaldropcondition","title":"let additionalDropCondition: ((Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input) -> Bool)?","type":"property"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/intermediate","title":"let intermediate: (Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input.Value) -> PipelineIntermediate<Intermediate>","type":"property"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/transform","title":"let transform: (Intermediate) -> Output","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/drop(while:)","title":"func drop(while: (Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input) -> Bool) -> Pipelines.ChangesMapPipeline<Source, Intermediate, Output>","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/yield(_:)","title":"func yield(Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input) -> Output","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/yieldcontinuously(_:)","title":"func yieldContinuously(Pipelines.ChangesMapPipeline<Source, Intermediate, Output>.Input) -> ContinuousResult<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/input","title":"Pipelines.ChangesMapPipeline.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/map(_:)","title":"static func map<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/map(using:)","title":"static func map<Input, EdgeIntermediate>(using: (Input) -> PipelineIntermediate<Edge<EdgeIntermediate>>) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/map(using:transform:)","title":"static func map<Input, Intermediate, Output>(using: (Input) -> PipelineIntermediate<Intermediate>, transform: (Intermediate) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/select(_:)","title":"static func select<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"}],"path":"\/documentation\/verge\/pipelines\/changesmappipeline\/pipelinetype-implementations","title":"PipelineType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/pipelines\/changesmappipeline","title":"Pipelines.ChangesMapPipeline","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/init(selector:)","title":"init(selector: (borrowing Pipelines.ChangesSelectPassthroughPipeline<Source, Output>.Input.Value) -> Output)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/selector","title":"let selector: (borrowing Pipelines.ChangesSelectPassthroughPipeline<Source, Output>.Input.Value) -> Output","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/yield(_:)","title":"func yield(Pipelines.ChangesSelectPassthroughPipeline<Source, Output>.Input) -> Output","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/yieldcontinuously(_:)","title":"func yieldContinuously(Pipelines.ChangesSelectPassthroughPipeline<Source, Output>.Input) -> ContinuousResult<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/input","title":"Pipelines.ChangesSelectPassthroughPipeline.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/map(_:)","title":"static func map<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/map(using:)","title":"static func map<Input, EdgeIntermediate>(using: (Input) -> PipelineIntermediate<Edge<EdgeIntermediate>>) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/map(using:transform:)","title":"static func map<Input, Intermediate, Output>(using: (Input) -> PipelineIntermediate<Intermediate>, transform: (Intermediate) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/select(_:)","title":"static func select<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"}],"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline\/pipelinetype-implementations","title":"PipelineType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/pipelines\/changesselectpassthroughpipeline","title":"Pipelines.ChangesSelectPassthroughPipeline","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/init(selector:additionaldropcondition:)","title":"init(selector: (borrowing Pipelines.ChangesSelectPipeline<Source, Output>.Input.Value) -> Output, additionalDropCondition: ((Pipelines.ChangesSelectPipeline<Source, Output>.Input) -> Bool)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/additionaldropcondition","title":"let additionalDropCondition: ((Pipelines.ChangesSelectPipeline<Source, Output>.Input) -> Bool)?","type":"property"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/selector","title":"let selector: (borrowing Pipelines.ChangesSelectPipeline<Source, Output>.Input.Value) -> Output","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/drop(while:)","title":"func drop(while: (Pipelines.ChangesSelectPipeline<Source, Output>.Input) -> Bool) -> Pipelines.ChangesSelectPipeline<Source, Output>","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/yield(_:)","title":"func yield(Pipelines.ChangesSelectPipeline<Source, Output>.Input) -> Output","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/yieldcontinuously(_:)","title":"func yieldContinuously(Pipelines.ChangesSelectPipeline<Source, Output>.Input) -> ContinuousResult<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/input","title":"Pipelines.ChangesSelectPipeline.Input","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/map(_:)","title":"static func map<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/map(using:)","title":"static func map<Input, EdgeIntermediate>(using: (Input) -> PipelineIntermediate<Edge<EdgeIntermediate>>) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/map(using:transform:)","title":"static func map<Input, Intermediate, Output>(using: (Input) -> PipelineIntermediate<Intermediate>, transform: (Intermediate) -> Output) -> Self","type":"method"},{"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/select(_:)","title":"static func select<Input, Output>((borrowing Input) -> Output) -> Self","type":"method"}],"path":"\/documentation\/verge\/pipelines\/changesselectpipeline\/pipelinetype-implementations","title":"PipelineType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/pipelines\/changesselectpipeline","title":"Pipelines.ChangesSelectPipeline","type":"struct"}],"path":"\/documentation\/verge\/pipelines","title":"Pipelines","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/queues\/asyncbackground\/execute(_:)","title":"func execute(() -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/queues\/asyncbackground\/asyncserialbackground","title":"static var asyncSerialBackground: Queues.AsyncBackground","type":"property"}],"path":"\/documentation\/verge\/queues\/asyncbackground\/targetqueuetype-implementations","title":"TargetQueueType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/queues\/asyncbackground","title":"Queues.AsyncBackground","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/queues\/passthrough\/execute(_:)","title":"func execute(() -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/queues\/passthrough\/passthrough","title":"static var passthrough: Queues.Passthrough","type":"property"}],"path":"\/documentation\/verge\/queues\/passthrough\/targetqueuetype-implementations","title":"TargetQueueType Implementations","type":"symbol"}],"path":"\/documentation\/verge\/queues\/passthrough","title":"Queues.Passthrough","type":"struct"}],"path":"\/documentation\/verge\/queues","title":"Queues","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/verge\/runtimeerror\/recoveredstatefromreceivingolderversion(lateststate:receivedstate:)","title":"case recoveredStateFromReceivingOlderVersion(latestState: AnyChangesType, receivedState: AnyChangesType)","type":"case"},{"path":"\/documentation\/verge\/runtimeerror\/recursiveleycommit(storename:traces:)","title":"case recursiveleyCommit(storeName: String, traces: [MutationTrace])","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/runtimeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/verge\/runtimeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/verge\/runtimeerror","title":"RuntimeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/verge\/storeoperation\/atomic(_:)","title":"case atomic(NSRecursiveLock)","type":"case"},{"path":"\/documentation\/verge\/storeoperation\/nonatomic","title":"case nonAtomic","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storeoperation\/atomic","title":"static var atomic: StoreOperation","type":"property"}],"path":"\/documentation\/verge\/storeoperation","title":"StoreOperation","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storereadercomponents\/node\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/verge\/storereadercomponents\/node","title":"StoreReaderComponents.Node","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/storereadercomponents\/stateproxy\/primitive","title":"var primitive: StateType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/storereadercomponents\/stateproxy\/binding(_:)-2x1g6","title":"func binding<T>(WritableKeyPath<StateType, T>) -> Binding<T>","type":"method"},{"path":"\/documentation\/verge\/storereadercomponents\/stateproxy\/binding(_:)-v09q","title":"func binding<T>(WritableKeyPath<StateType, T>) -> Binding<T>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/verge\/storereadercomponents\/stateproxy\/subscript(dynamicmember:)-1wlik","title":"subscript<T>(dynamicMember _: KeyPath<StateType, T>) -> T","type":"subscript"},{"path":"\/documentation\/verge\/storereadercomponents\/stateproxy\/subscript(dynamicmember:)-2bd6c","title":"subscript<T>(dynamicMember _: KeyPath<StateType, T>) -> T","type":"subscript"}],"path":"\/documentation\/verge\/storereadercomponents\/stateproxy","title":"StoreReaderComponents.StateProxy","type":"struct"}],"path":"\/documentation\/verge\/storereadercomponents","title":"StoreReaderComponents","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/init(_:)","title":"init(VergeConcurrency.AtomicLazy<T>.Initializer)","type":"init"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/init(wrappedvalue:)","title":"init(wrappedValue: VergeConcurrency.AtomicLazy<T>.Initializer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/projectedvalue","title":"var projectedValue: VergeConcurrency.AtomicLazy<T>","type":"property"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/modify(_:)","title":"func modify<Result>((inout T) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/oninitialized(_:)","title":"func onInitialized((T) -> Void) -> Self","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy\/initializer","title":"VergeConcurrency.AtomicLazy.Initializer","type":"typealias"}],"path":"\/documentation\/verge\/vergeconcurrency\/atomiclazy","title":"VergeConcurrency.AtomicLazy","type":"class"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelock","title":"VergeConcurrency.RecursiveLock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic\/init(_:)","title":"init(Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic\/unsafelywrappedvalue","title":"var unsafelyWrappedValue: Value","type":"property"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic\/value","title":"var value: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic\/modify(_:)","title":"func modify<Result>((inout Value) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic\/swap(_:)","title":"func swap(Value) -> Value","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic\/withvalue(_:)","title":"func withValue<Result>((Value) throws -> Result) rethrows -> Result","type":"method"}],"path":"\/documentation\/verge\/vergeconcurrency\/recursivelockatomic","title":"VergeConcurrency.RecursiveLockAtomic","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/init(debugonly:)","title":"init(debugOnly: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/register(_:_:_:printsconsole:)","title":"func register(StaticString, StaticString, UInt, printsConsole: Bool) -> Set<VergeConcurrency.SynchronizationTracker.Warning>","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/unregister()","title":"func unregister()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/warning\/reentrancyanomaly","title":"case reentrancyAnomaly","type":"case"},{"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/warning\/synchronizationanomaly","title":"case synchronizationAnomaly","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/warning\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/warning\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker\/warning","title":"VergeConcurrency.SynchronizationTracker.Warning","type":"enum"}],"path":"\/documentation\/verge\/vergeconcurrency\/synchronizationtracker","title":"VergeConcurrency.SynchronizationTracker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/init(_:)","title":"init(Value)","type":"init"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/init(wrappedvalue:)","title":"init(wrappedValue: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/projectedvalue","title":"var projectedValue: VergeConcurrency.UnfairLockAtomic<Value>","type":"property"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/unsafelywrappedvalue","title":"var unsafelyWrappedValue: Value","type":"property"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/value","title":"var value: Value","type":"property"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/modify(_:)","title":"func modify<Result>((inout Value) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/swap(_:)","title":"func swap(Value) -> Value","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic\/withvalue(_:)","title":"func withValue<Result>((Value) throws -> Result) rethrows -> Result","type":"method"}],"path":"\/documentation\/verge\/vergeconcurrency\/unfairlockatomic","title":"VergeConcurrency.UnfairLockAtomic","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlock\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlock\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlock\/try()","title":"func `try`() -> Bool","type":"method"},{"path":"\/documentation\/verge\/vergeconcurrency\/unfairlock\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/verge\/vergeconcurrency\/unfairlock","title":"VergeConcurrency.UnfairLock","type":"struct"}],"path":"\/documentation\/verge\/vergeconcurrency","title":"VergeConcurrency","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/verge\/vergeoslogs\/debuglog","title":"static let debugLog: OSLog","type":"property"}],"path":"\/documentation\/verge\/vergeoslogs","title":"VergeOSLogs","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/combine\/publisher\/assign(to:)","title":"func assign(to: (Self.Output) -> Void) -> VergeAnyCancellable","type":"method"}],"path":"\/documentation\/verge\/combine\/publisher","title":"Publisher","type":"extension"}],"path":"\/documentation\/verge\/combine","title":"Combine","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/swift\/collection\/cachedcompactmap(using:sweepsunused:makenew:update:)","title":"func cachedCompactMap<U>(using: InstancePool<Self.Element, U>, sweepsUnused: Bool, makeNew: (Self.Element) throws -> U?, update: (Self.Element, inout U) -> Void) rethrows -> [U]","type":"method"},{"path":"\/documentation\/verge\/swift\/collection\/cachedmap(using:sweepsunused:makenew:update:)","title":"func cachedMap<U>(using: InstancePool<Self.Element, U>, sweepsUnused: Bool, makeNew: (Self.Element) throws -> U, update: (Self.Element, inout U) -> Void) rethrows -> [U]","type":"method"}],"path":"\/documentation\/verge\/swift\/collection","title":"Collection","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/swift\/staticstring\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/verge\/swift\/staticstring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/verge\/swift\/staticstring","title":"StaticString","type":"extension"}],"path":"\/documentation\/verge\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/swiftui\/view\/onreceiveactivity(_:perform:)","title":"func onReceiveActivity<D>(D, perform: (D.Activity) -> Void) -> some View","type":"method"},{"path":"\/documentation\/verge\/swiftui\/view\/onreceivestate(_:perform:)","title":"func onReceiveState<D>(D, perform: (Changes<D.State>) -> Void) -> some View","type":"method"}],"path":"\/documentation\/verge\/swiftui\/view","title":"View","type":"extension"}],"path":"\/documentation\/verge\/swiftui","title":"SwiftUI","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/verge\/vergecomparator\/comparison\/versionequals()","title":"static func versionEquals<T>() -> Self","type":"method"}],"path":"\/documentation\/verge\/vergecomparator\/comparison","title":"Comparison","type":"extension"}],"path":"\/documentation\/verge\/vergecomparator","title":"VergeComparator","type":"extension"}],"path":"\/documentation\/verge","title":"Verge","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}